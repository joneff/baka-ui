@use "sass:map";
@use "sass:meta";
@use "baka-core" as baka;

$_default-layout: (
  xs: (
    screen: 0,
    width: 100%,
    columns: 4,
    gutter: 16px,
    margin: 16px,
  ),
  sm: (
    screen: 600px,
    width: 100%,
    columns: 8,
    gutter: 16px,
    margin: 32px,
    regions: (
      left: (
        width: 80px,
        offset: -16px,
      ),
    ),
  ),
  md: (
    screen: 905px,
    width: 100%,
    columns: 10,
    gutter: 16px,
    margin: 32px,
    regions: (
      left: (
        width: 80px,
      ),
    ),
  ),
  lg: (
    screen: 1240px,
    width: 880px,
    columns: 12,
    gutter: 24px,
    margin: 24px,
    regions: (
      left: (
        width: 80px,
      ),
    ),
  ),
  xl: (
    screen: 1440px,
    width: 1128px,
    columns: 12,
    gutter: 24px,
    margin: 24px,
    regions: (
      left: (
        width: 360px,
      ),
    ),
  ),
);

$layout: () !default;
$layout: map-merge($_default-layout, $layout);
$_layout: map-merge($layout, ());

// @function assign($vars: (), $prefix: --) {
//   @each $name, $value in $vars {
//     @if (meta.type-of($value) == "map") {
//       $result: assign($value, #{$prefix}--#{$name});
//       $vars: map.set($vars, #{$name}, $result);
//     } @else if (meta.type-of($value) == "list") {
//       $result: assign($value, #{$prefix}--#{$name});
//       $vars: map.set($vars, #{$name}, $result);
//     } @else {
//       $vars: map.set($vars, #{$name}, var(#{$prefix}--#{$name}, $value));
//     }
//   }
//   @return $vars;
// }

// $layout: assign($layout, --layout);

@debug $layout;

@mixin layout--styles {
  @include baka.css-vars($layout, --layout);
}
