@use "../../styles" as *;
@use "baka-core" as *;

.baka-text-field {
  @include body-large;
  --accent: #{$on-surface-variant};
  --outline-height: 1px;
  --state: #{$on-surface};
  --label-offset: 0;

  gap: 8px;
  height: 40px;
  padding: 8px 0 8px 16px;

  @include state-layer {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    height: 100%;

    @include motion-transition-TBD(background);
  }

  @include variant(filled, true) {
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
    color: $on-surface-variant;
    background: $surface-container-highest;

    &:after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      height: var(--outline-height);
      width: 100%;
      background: var(--accent);

      @include motion-transition-TBD(height, background);
    }

    & > .baka-label {
      color: var(--accent);
    }

    &:has(> .baka-icon:is(:first-child)) {
      & > .baka-label {
        --label-offset: 32px;
      }
    }

    &:has(.baka-label) {
      & > .baka-label {
        @include body-small;

        position: absolute;
        transform: translate(var(--label-offset), -12px);

        @include motion-transition-TBD(transform, background, left, font-size);
      }

      & > .baka-input {
        transform: translateY(8px);
        @include motion-transition-TBD(transform, opacity);
      }

      &:has(.baka-input:not(:placeholder-shown)#{$selector--empty}):not(
          :focus
        ):not(:focus-within):not(:focus-visible):not(#{$selector--focus}) {
        & > .baka-label {
          @include body-large;
          transform: translate(var(--label-offset), 0);
        }

        & > .baka-input {
          opacity: 0;
          transform: translateY(0);
        }
      }
    }
  }

  @include variant(outlined) {
    --state: transparent;
    background: transparent;

    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;

    @include state-layer {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      outline-style: solid;
      outline-width: var(--outline-height);
      outline-color: var(--accent);
      outline-offset: calc(var(--outline-height) * -1);
      border-radius: 4px;

      @include motion-transition-TBD(outline-color);
    }

    &:after {
      content: none;
    }

    &:has(.baka-label) {
      & > .baka-label {
        z-index: 1;
        background: $surface;
        padding: 0 4px;

        @include body-small;

        position: absolute;
        transform: translate(-4px, -28px);
      }

      & > .baka-input {
        transform: translateY(0);
        @include motion-transition-TBD(transform, opacity);
      }

      &:has(.baka-input:not(:placeholder-shown)#{$selector--empty}):not(
          :focus
        ):not(:focus-within):not(:focus-visible):not(#{$selector--focus}) {
        & > .baka-label {
          @include body-large;
          background: transparent;
          transform: translate(var(--label-offset), 0);
        }

        & > .baka-input {
          opacity: 0;
          transform: translateY(0);
        }
      }
    }
  }

  @include hover {
    --accent: #{$on-surface};
    @include state-layer {
      background: color-mix(in srgb, var(--state) 0.08 * 100%, transparent);
    }
  }

  @include focus {
    --accent: #{$primary};
    --outline-height: 2px;
  }

  @include invalid {
    --accent: #{$error};
    --outline-height: 2px;
  }

  @include disabled {
    pointer-events: none;
    opacity: 0.38;
    --accent: #{$on-surface};
  }

  > .baka-icon,
  > .baka-button {
    margin-inline-start: -2px;
    margin-inline-end: 2px;
    margin-top: -4px;
    margin-bottom: -4px;
  }
}
