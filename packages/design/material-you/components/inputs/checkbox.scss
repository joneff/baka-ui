@use "../../design" as *;
@use "baka-core" as baka;

@mixin checkbox--styles {
  .baka-checkbox {
    @include baka.checkbox--styles;
    --color: #{map-get($swatch, on-primary)};
    --state: ;
    --border: #{map-get($swatch, on-surface-variant)};
    --state: #{map-get($swatch, on-surface)};
    --background: transparent;
    --ripple: #{map-get($swatch, on-surface)};

    width: 18px;
    height: 18px;

    color: var(--color);
    background-color: var(--background);

    border-radius: 2px;
    border-width: 2px;
    border-style: solid;
    border-color: var(--border);

    @include motion-transition-TBD(background-color, border-color);

    @include state-layer {
      content: var(--content, "");
      font-family: "Material Symbols Outlined";
      font-size: 22px;
      color: transparent;
      border-radius: 100px;
      text-align: center;
      position: absolute;
      top: 50%;
      left: 50%;
      width: 48px;
      height: 48px;
      padding: 8px;
      transform: translate(-50%, -50%);
      background-position: center;

      @include motion-transition-TBD(background-color, color);
      transition-delay: 0.05s, 0s;
    }

    @include ripple(var(--ripple), $scale: 24);

    @include baka.checked {
      --content: "check";
      --state: #{map-get($swatch, primary)};
      --border: #{map-get($swatch, primary)};
      --color: #{map-get($swatch, on-primary)};
      --background: #{map-get($swatch, primary)};
      --ripple: #{map-get($swatch, primary)};

      @include state-layer {
        color: #{map-get($swatch, on-primary)};
      }
    }

    @include baka.indeterminate {
      --content: "check_indeterminate_small";
      --state: #{map-get($swatch, primary)};
      --border: #{map-get($swatch, primary)};
      --color: #{map-get($swatch, on-primary)};
      --background: #{map-get($swatch, primary)};
      --ripple: #{map-get($swatch, primary)};

      @include state-layer {
        color: #{map-get($swatch, on-primary)};
      }
    }

    @include baka.hover($readonly: false) {
      @include state-layer {
        background-color: color-mix(in srgb, var(--state) 0.08 * 100%, transparent);
      }
    }

    @include baka.focus($readonly: false) {
      outline: none;
      @include state-layer {
        background-color: color-mix(in srgb, var(--state) 0.12 * 100%, transparent);
      }
    }

    @include baka.active($readonly: false) {
      @include state-layer {
        background-color: color-mix(in srgb, var(--state) 0.12 * 100%, transparent);
      }
    }

    @include baka.variant(error) {
      --border: #{map-get($swatch, error)};
      --state: #{map-get($swatch, error)};
      --color: #{map-get($swatch, on-error)};
      --ripple: #{map-get($swatch, error)};

      @include baka.checked {
        --background: #{map-get($swatch, error)};
      }

      @include baka.indeterminate {
        --background: #{map-get($swatch, error)};
      }
    }

    @include baka.disabled {
      opacity: 0.38;
      --border: #{map-get($swatch, on-surface)};

      @include baka.checked {
        --background: #{map-get($swatch, on-surface)};
      }

      @include baka.indeterminate {
        --background: #{map-get($swatch, on-surface)};
      }
    }
  }
}
