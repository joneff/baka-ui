@use "baka-core" as *;
@use "../../design/" as *;

@mixin column--styles {
  .baka-column {
    @include core-column--styles;

    @for $j from 1 through length($layout) {
      $size: nth(map-keys($layout), $j);
      $breakpoint: nth(map-values($layout), $j);

      $_width: map-get($breakpoint, width);
      $_screen: map-get($breakpoint, screen);
      $_columns: map-get($breakpoint, columns);
      $_gutter: map-get($breakpoint, gutter);
      $_regions: map-get($breakpoint, regions);

      flex-grow: 1;

      @if ($_screen == 0) {
        @for $i from 1 through $_columns {
          & {
            width: calc(($i / $_columns) * 100% - $_gutter);
          }
          &.value--#{$i} {
            width: calc(($i / $_columns) * 100% - $_gutter);
          }
        }
      } @else {
        @media screen and (min-width: $_screen) {
          @for $i from 1 through $_columns {
            &.value-#{$j - 1}--#{$i} {
              width: calc(($i / $_columns) * 100% - $_gutter);
            }
            &.value--#{$i} {
              width: calc(($i / $_columns) * 100% - $_gutter);
            }
          }
        }
      }
    }

    @include variant(region-left) {
      flex: 0 0 auto;
      @each $size, $breakpoint in $layout {
        $_width: map-get($breakpoint, width);
        $_screen: map-get($breakpoint, screen);
        $_columns: map-get($breakpoint, columns);
        $_gutter: map-get($breakpoint, gutter);
        $_margin: map-get($breakpoint, margin);
        $_regions: map-get($breakpoint, regions);

        @if ($_screen == 0) {
          @if ($_regions) {
            @for $i from 1 through $_columns {
              & {
                width: map-get(map-get($_regions, left), width);
              }
            }
          }
        } @else {
          @if ($_regions) {
            @media screen and (min-width: $_screen) {
              width: map-get(map-get($_regions, left), width);
            }
          }
        }
      }
    }
  }
}
