[{"name":"demos/material-you/badge","files":[{"name":"page.tsx","code":"import { BakaBadge } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <>\n      <BakaBadge variant={\"small\"} />\n      <br />\n      <br />\n      <BakaBadge variant={\"single-digit\"}>4</BakaBadge>\n      <br />\n      <br />\n      <BakaBadge variant={\"multi-digit\"}>14</BakaBadge>\n    </>\n  );\n}\n"}]},{"name":"demos/material-you/bars","files":[{"name":"page.tsx","code":"import { BakaButton, BakaIcon, BakaText, BakaBar } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <>\n      <BakaBar style={{ width: 404 }} variant=\"top\">\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon>menu</BakaIcon>\n        </BakaButton>\n        <BakaText variant=\"title-large\" style={{ flexGrow: 1, textAlign: \"center\" }}>\n          Product\n        </BakaText>\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon variant={\"filled\"}>account_circle</BakaIcon>\n        </BakaButton>\n      </BakaBar>\n      <br />\n      <br />\n      <BakaBar\n        style={{\n          width: 400,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n        variant=\"bottom\"\n      >\n        <div style={{ display: \"flex\", gap: 8 }}>\n          {[\"circle\", \"change_history\", \"rectangle\", \"pentagon\", \"hexagon\"].map((shape) => (\n            <BakaButton variant={\"icon\"}>\n              <BakaIcon>{shape}</BakaIcon>\n            </BakaButton>\n          ))}\n        </div>\n        {true ? (\n          <BakaButton variant={[\"fab\", \"secondary\"]}>\n            <BakaIcon>add</BakaIcon>\n          </BakaButton>\n        ) : null}\n      </BakaBar>\n    </>\n  );\n}\n"}]},{"name":"demos/material-you/button","files":[{"name":"page.tsx","code":"import { BakaButton } from \"baka-ui\";\n\nexport default function ButtonDemo() {\n  return (\n    <>\n      <div className=\"flex flex-col\">\n        <BakaButton variant=\"filled\">Button</BakaButton>\n        <BakaButton variant=\"outlined\">Button</BakaButton>\n        <BakaButton variant=\"text\">Button</BakaButton>\n        <BakaButton variant=\"elevated\">Button</BakaButton>\n      </div>\n    </>\n  );\n}\n"}]},{"name":"demos/material-you/card","files":[{"name":"page.tsx","code":"import {\n  BakaCard,\n  BakaAvatar,\n  BakaText,\n  BakaButton,\n  BakaIcon,\n} from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <BakaCard style={{ width: 360 }}>\n      <div\n        style={{\n          display: \"flex\",\n          padding: \"12px 4px 12px 16px\",\n          alignSelf: \"stretch\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: 16 }}>\n          <BakaAvatar>\n            <span>A</span>\n          </BakaAvatar>\n          <BakaText style={{ display: \"flex\", flexDirection: \"column\", gap: 4 }}>\n            <BakaText variant={\"title-medium\"}>Header</BakaText>\n            <BakaText variant={\"body-medium\"}>Subhead</BakaText>\n          </BakaText>\n        </div>\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon>more_vert</BakaIcon>\n        </BakaButton>\n      </div>\n      <div>\n        <img\n          src=\"/media.png\"\n          alt=\"media\"\n          width={720}\n          height={376}\n          style={{\n            maxWidth: \"100%\",\n            height: \"auto\",\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignSelf: \"stretch\",\n          flexDirection: \"column\",\n          gap: 32,\n          padding: 16,\n        }}\n      >\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <BakaText variant={\"body-large\"}>Title</BakaText>\n          <BakaText variant={\"body-medium\"}>Subhead</BakaText>\n        </div>\n        <BakaText variant={\"body-medium\"}>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n        </BakaText>\n        <div style={{ display: \"flex\", alignSelf: \"stretch\", justifyContent: \"flex-end\", gap: 8 }}>\n          <BakaButton variant={[\"outlined\"]}>Enabled</BakaButton>\n          <BakaButton variant={[\"filled\"]}>Enabled</BakaButton>\n        </div>\n      </div>\n    </BakaCard>\n  );\n}\n"}]},{"name":"demos/material-you/checkbox","files":[{"name":"page.tsx","code":"import { BakaCheckbox } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <>\n      <BakaCheckbox readOnly checked />\n      <br />\n      <br />\n      <BakaCheckbox readOnly indeterminate />\n      <br />\n      <br />\n      <BakaCheckbox />\n      <br />\n      <br />\n      <BakaCheckbox readOnly checked variant={\"error\"} />\n      <br />\n      <br />\n      <BakaCheckbox readOnly indeterminate variant={\"error\"} />\n      <br />\n      <br />\n      <BakaCheckbox readOnly variant={\"error\"} />\n    </>\n  );\n}\n"}]},{"name":"demos/material-you/chip","files":[{"name":"page.tsx","code":"import { BakaChip } from \"baka-ui\";\n\nexport default async function Chip() {\n  return <BakaChip>Label</BakaChip>;\n}\n"}]},{"name":"demos/material-you/dialog","files":[{"name":"page.tsx","code":"import {\n  BakaAvatar,\n  BakaButton,\n  BakaCheckbox,\n  BakaDialog,\n  BakaIcon,\n  BakaListItem,\n  BakaText,\n} from \"baka-ui\";\n\nexport default function DialogDemo() {\n  return (\n    <BakaDialog style={{ width: 320 }}>\n      <div style={{ display: \"flex\", gap: 16, flexDirection: \"column\" }}>\n        <BakaIcon style={{ justifyContent: \"center\" }}>mobile_friendly</BakaIcon>\n        <BakaText style={{ display: \"flex\", justifyContent: \"center\" }} variant={\"headline-small\"}>\n          Dialog Title\n        </BakaText>\n        <BakaText variant={\"body-medium\"}>\n          A dialog is a type of modal window that appears in front of app content to provide\n          critical information, or prompt for a decision to be made.\n        </BakaText>\n      </div>\n      <ul\n        style={{\n          background: \"none\",\n          padding: 0,\n          margin: 0,\n          width: \"calc(100% + 48px)\",\n          marginInline: \"-24px\",\n        }}\n      >\n        <BakaListItem>\n          <BakaAvatar>A</BakaAvatar>\n          <BakaText style={{ flexGrow: 1 }} variant={\"body-large\"}>\n            BakaList item\n          </BakaText>\n          <BakaText>100+</BakaText>\n          <BakaCheckbox readOnly={true} />\n        </BakaListItem>\n        <BakaListItem>\n          <BakaAvatar>A</BakaAvatar>\n          <BakaText style={{ flexGrow: 1 }} variant={\"body-large\"}>\n            BakaList item\n          </BakaText>\n          <BakaText>100+</BakaText>\n          <BakaCheckbox readOnly={true} checked={true} />\n        </BakaListItem>\n        <BakaListItem>\n          <BakaAvatar>A</BakaAvatar>\n          <BakaText style={{ flexGrow: 1 }} variant={\"body-large\"}>\n            BakaList item\n          </BakaText>\n          <BakaText>100+</BakaText>\n          <BakaCheckbox readOnly={true} checked={true} />\n        </BakaListItem>\n      </ul>\n      <div style={{ display: \"flex\", gap: 8, width: \"100%\", justifyContent: \"flex-end\" }}>\n        <BakaButton variant={[\"text\"]}>Action 2</BakaButton>\n        <BakaButton variant={[\"text\"]}>Action 1</BakaButton>\n      </div>\n    </BakaDialog>\n  );\n}\n"}]},{"name":"demos/material-you/divider","files":[{"name":"page.tsx","code":"import { BakaDivider } from \"baka-ui\";\n\nexport default function DividerDemo() {\n  return <BakaDivider style={{ width: 300 }} />;\n}\n"}]},{"name":"demos/material-you/icon","files":[{"name":"page.tsx","code":"import { BakaIcon } from \"baka-ui\";\n\nexport default function IconDemo() {\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(6, 1fr)\",\n        gap: \"16px\",\n        alignItems: \"center\",\n      }}\n    >\n      <BakaIcon variant={[\"small\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"filled\", \"small\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"medium\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"medium\", \"filled\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"large\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"filled\", \"large\"]}>settings</BakaIcon>\n\n      <BakaIcon variant={[\"primary\", \"small\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"primary\", \"filled\", \"small\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"primary\", \"medium\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"primary\", \"medium\", \"filled\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"primary\", \"large\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"primary\", \"filled\", \"large\"]}>settings</BakaIcon>\n\n      <BakaIcon variant={[\"error\", \"small\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"error\", \"filled\", \"small\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"error\", \"medium\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"error\", \"medium\", \"filled\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"error\", \"large\"]}>settings</BakaIcon>\n      <BakaIcon variant={[\"error\", \"filled\", \"large\"]}>settings</BakaIcon>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/input","files":[{"name":"page.tsx","code":"import { BakaInput, BakaTextField } from \"baka-ui\";\n\nexport default function InputDemo() {\n  return (\n    <BakaTextField>\n      <BakaInput defaultValue={\"test\"} />\n    </BakaTextField>\n  );\n}\n"}]},{"name":"demos/material-you/layout","files":[{"name":"page.tsx","code":"import { BakaContainer, BakaRow, BakaColumn } from \"baka-ui\";\n\nexport default function LayoutDemo() {\n  return (\n    <div style={{ width: \"calc(100vw - 128px)\", height: \"calc(100vh - 64px)\", display: \"flex\" }}>\n      <BakaColumn variant={\"region-left\"} style={{ background: \"#FDE0F1\" }}>\n        <div style={{ height: \"calc(100vh - 64px\" }} />\n      </BakaColumn>\n      <BakaContainer>\n        <BakaRow style={{ height: \"100%\" }}>\n          {Array.from({ length: 8 }).map((_, index) => (\n            <BakaColumn key={index} size={2}>\n              <div style={{ height: \"100%\", width: \"100%\", background: \"#E0F0F0\" }} />\n            </BakaColumn>\n          ))}\n        </BakaRow>\n      </BakaContainer>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/list","files":[{"name":"page.tsx","code":"import { BakaAvatar, BakaCheckbox, BakaList, BakaListItem, BakaText } from \"baka-ui\";\n\nexport default async function ListDemo() {\n  return (\n    <div className=\"container-low\">\n      <BakaList style={{ width: 360 }}>\n        {Array.from({ length: 5 }, (_, i) => (\n          <BakaListItem key={i}>\n            <BakaAvatar>A</BakaAvatar>\n            <BakaText style={{ flexGrow: 1 }} variant={\"body-large\"}>\n              List item\n            </BakaText>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        ))}\n      </BakaList>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/menu","files":[{"name":"page.tsx","code":"import { BakaMenu, BakaMenuItem, BakaText } from \"baka-ui\";\n\nexport default function MenuDemo() {\n  return (\n    <BakaMenu style={{ width: 360 }}>\n      {Array.from({ length: 5 }, (_, i) => (\n        <BakaMenuItem key={i}>\n          <BakaText>Menu item</BakaText>\n        </BakaMenuItem>\n      ))}\n    </BakaMenu>\n  );\n}\n"}]},{"name":"demos/material-you/navigation","files":[{"name":"page.tsx","code":"import SideNavigation from \"./side/page\";\nimport BottomNavigation from \"./bottom/page\";\nimport RailNavigation from \"./rail/page\";\n\nexport default async function () {\n  return (\n    <div className=\"flex flex-col\" style={{ height: 500 }}>\n      <div className=\"flex overflow-hidden\">\n        <div className=\"border border-dashed\">\n          <RailNavigation />\n        </div>\n        <div className=\"border border-dashed border-l-0\">\n          <SideNavigation />\n        </div>\n      </div>\n      <div>\n        <div className=\"border border-dashed\">\n          <BottomNavigation />\n        </div>\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/radio","files":[{"name":"page.tsx","code":"import { BakaRadio } from \"baka-ui\";\n\nexport default function RadioDemo() {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: 32 }}>\n      <div style={{ display: \"flex\", gap: 48 }}>\n        <BakaRadio defaultChecked={true} />\n        <BakaRadio defaultChecked={true} hovered={true} />\n        <BakaRadio defaultChecked={true} focused={true} />\n        <BakaRadio defaultChecked={true} activated={true} />\n        <BakaRadio defaultChecked={true} disabled={true} />\n      </div>\n      <div style={{ display: \"flex\", gap: 48 }}>\n        <BakaRadio />\n        <BakaRadio hovered={true} />\n        <BakaRadio focused={true} />\n        <BakaRadio activated={true} />\n        <BakaRadio disabled={true} />\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/switch","files":[{"name":"page.tsx","code":"import { BakaSwitch } from \"baka-ui\";\n\nexport default function SwitchDemo() {\n  return (\n    <div style={{ display: \"flex\", gap: 32, flexDirection: \"column\" }}>\n      <div style={{ display: \"flex\", gap: 32 }}>\n        <BakaSwitch defaultChecked={true} />\n        <BakaSwitch defaultChecked={true} hovered={true} />\n        <BakaSwitch defaultChecked={true} focused={true} />\n        <BakaSwitch defaultChecked={true} activated={true} />\n        <BakaSwitch defaultChecked={true} disabled={true} />\n      </div>\n      <div style={{ display: \"flex\", gap: 32 }}>\n        <BakaSwitch variant=\"icon\" defaultChecked={true} />\n        <BakaSwitch variant=\"icon\" defaultChecked={true} hovered={true} />\n        <BakaSwitch variant=\"icon\" defaultChecked={true} focused={true} />\n        <BakaSwitch variant=\"icon\" defaultChecked={true} activated={true} />\n        <BakaSwitch variant=\"icon\" defaultChecked={true} disabled={true} />\n      </div>\n      <div style={{ display: \"flex\", gap: 32 }}>\n        <BakaSwitch />\n        <BakaSwitch hovered={true} />\n        <BakaSwitch focused={true} />\n        <BakaSwitch activated={true} />\n        <BakaSwitch disabled={true} />\n      </div>\n      <div style={{ display: \"flex\", gap: 32 }}>\n        <BakaSwitch variant=\"icon\" />\n        <BakaSwitch variant=\"icon\" hovered={true} />\n        <BakaSwitch variant=\"icon\" focused={true} />\n        <BakaSwitch variant=\"icon\" activated={true} />\n        <BakaSwitch variant=\"icon\" disabled={true} />\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/text-field","files":[{"name":"page.tsx","code":"import { BakaButton, BakaIcon, BakaInput, BakaText, BakaTextField } from \"baka-ui\";\n\nexport default async function App() {\n  const args = {};\n  return (\n    <div className=\"flex gap-4 flex-col\">\n      <div className=\"flex gap-4\">\n        <BakaTextField style={{ width: 300 }}>\n          <BakaIcon>search</BakaIcon>\n          <BakaText>Label</BakaText>\n          <BakaInput defaultValue=\"Placeholder\" />\n          <BakaButton variant={[\"icon\"]}>\n            <BakaIcon variant={[\"filled\"]}>clear</BakaIcon>\n          </BakaButton>\n        </BakaTextField>\n        <BakaTextField style={{ width: 300 }} invalid={true}>\n          <BakaIcon>search</BakaIcon>\n          <BakaText>Label</BakaText>\n          <BakaInput defaultValue=\"Invalid\" />\n          <BakaButton variant={[\"icon\"]}>\n            <BakaIcon variant={[\"filled\", \"error\"]}>error</BakaIcon>\n          </BakaButton>\n        </BakaTextField>\n      </div>\n      <div className=\"flex gap-4\">\n        <BakaTextField variant=\"outlined\" style={{ width: 300 }}>\n          <BakaIcon>search</BakaIcon>\n          <BakaText>Label</BakaText>\n          <BakaInput defaultValue=\"Placeholder\" />\n          <BakaButton variant={[\"icon\"]}>\n            <BakaIcon variant={[\"filled\"]}>clear</BakaIcon>\n          </BakaButton>\n        </BakaTextField>\n        <BakaTextField variant=\"outlined\" style={{ width: 300 }} invalid={true}>\n          <BakaIcon>search</BakaIcon>\n          <BakaText>Label</BakaText>\n          <BakaInput defaultValue=\"Invalid\" />\n          <BakaButton variant={[\"icon\"]}>\n            <BakaIcon variant={[\"filled\", \"error\"]}>error</BakaIcon>\n          </BakaButton>\n        </BakaTextField>\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/avatar/basic","files":[{"name":"page.tsx","code":"import { BakaAvatar, BakaIcon } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <>\n      <BakaAvatar>A</BakaAvatar>\n      <br />\n      <br />\n      <BakaAvatar>\n        <BakaIcon>check</BakaIcon>\n      </BakaAvatar>\n      <br />\n      <br />\n      <BakaAvatar>\n        <BakaIcon as=\"img\" src=\"/avatar.svg\" />\n      </BakaAvatar>\n    </>\n  );\n}\n"}]},{"name":"demos/material-you/avatar/icon","files":[{"name":"page.tsx","code":"import { BakaAvatar, BakaIcon } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <>\n      <BakaAvatar>\n        <BakaIcon>check</BakaIcon>\n      </BakaAvatar>\n    </>\n  );\n}\n"}]},{"name":"demos/material-you/avatar/image","files":[{"name":"page.tsx","code":"import { BakaAvatar, BakaIcon } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <>\n      <BakaAvatar>\n        <BakaIcon as=\"img\" src=\"/avatar.svg\" />\n      </BakaAvatar>\n    </>\n  );\n}\n"}]},{"name":"demos/material-you/avatar/stories","files":[{"name":"page.tsx","code":"/// <reference types=\"baka-material-you\" />\nimport { BakaAvatar, BakaAvatarProps, BakaIcon } from \"baka-ui\";\n\nexport type AvatarStoryProps = BakaAvatarProps & {\n  type: \"letter\" | \"icon\" | \"image\";\n  children: React.ReactNode;\n};\nexport const defaultProps: AvatarStoryProps = {\n  type: \"letter\",\n};\n\nexport default function AvatarStory(props: AvatarStoryProps) {\n  const { type, children, ...other } = { ...defaultProps, ...props };\n\n  return (\n    <>\n      {(() => {\n        switch (type) {\n          case \"icon\":\n            return (\n              <BakaAvatar {...other}>\n                <BakaIcon>check</BakaIcon>\n              </BakaAvatar>\n            );\n          case \"image\":\n            return (\n              <BakaAvatar {...other}>\n                <BakaIcon as=\"img\" src=\"./avatar.svg\" />\n              </BakaAvatar>\n            );\n          case \"letter\":\n          default:\n            return <BakaAvatar {...other}>{children || \"A\"}</BakaAvatar>;\n        }\n      })()}\n    </>\n  );\n}\n"},{"name":"avatar.stories.tsx","code":"/// <reference types=\"baka-material-you\" />\n\nimport React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport AvatarStory, { AvatarStoryProps, defaultProps } from \"./page\";\n\nconst variantOptions: BakaDesign[\"AvatarVariant\"][] = [\"small\", \"medium\"];\n\nconst meta: Meta = {\n  title: \"Material You/Avatar\",\n  component: (props: AvatarStoryProps) => <AvatarStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    type: {\n      control: \"radio\",\n      options: [\"letter\", \"icon\", \"image\"],\n    },\n    variant: {\n      control: \"radio\",\n      options: variantOptions,\n    },\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    variant: \"medium\",\n    ...defaultProps,\n  },\n};\n"}]},{"name":"demos/material-you/avatar/text","files":[{"name":"page.tsx","code":"import { BakaAvatar } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <>\n      <BakaAvatar>A</BakaAvatar>\n    </>\n  );\n}\n"}]},{"name":"demos/material-you/badge/stories","files":[{"name":"page.tsx","code":"import { BakaBadge, BakaBadgeProps } from \"baka-ui\";\n\nexport type BadgeStoryProps = BakaBadgeProps & {};\nexport const defaultProps: BadgeStoryProps = {\n  variant: \"single-digit\",\n};\n\nexport default function BadgeStory(props: BadgeStoryProps) {\n  switch (props.variant) {\n    case \"small\":\n      return <BakaBadge {...props} />;\n    case \"multi-digit\":\n      return <BakaBadge {...props}>99+</BakaBadge>;\n    case \"single-digit\":\n    default:\n      return <BakaBadge {...props}>3</BakaBadge>;\n  }\n}\n"},{"name":"badge.stories.tsx","code":"import React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport BadgeStory, { BadgeStoryProps, defaultProps } from \"./page\";\n\nconst variantOptions: BakaDesign[\"BadgeVariant\"][] = [\"small\", \"single-digit\", \"multi-digit\"];\n\nconst meta: Meta = {\n  title: \"Material You/Badge\",\n  component: (props: BadgeStoryProps) => <BadgeStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      options: variantOptions,\n    },\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n  },\n};\n"}]},{"name":"demos/material-you/bars/bottom","files":[{"name":"page.tsx","code":"import { BakaBar, BakaButton, BakaIcon } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <BakaBar\n      style={{\n        width: 400,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n      }}\n      variant=\"bottom\"\n    >\n      <div style={{ display: \"flex\", gap: 8 }}>\n        {[\"circle\", \"change_history\", \"rectangle\", \"pentagon\", \"hexagon\"].map((shape) => (\n          <BakaButton variant={\"icon\"}>\n            <BakaIcon>{shape}</BakaIcon>\n          </BakaButton>\n        ))}\n      </div>\n      {true ? (\n        <BakaButton variant={[\"fab\", \"secondary\"]}>\n          <BakaIcon>add</BakaIcon>\n        </BakaButton>\n      ) : null}\n    </BakaBar>\n  );\n}\n"}]},{"name":"demos/material-you/bars/stories","files":[{"name":"page.tsx","code":"import { BakaBadge, BakaBar, BakaBarProps, BakaButton, BakaIcon, BakaText } from \"baka-ui\";\n\nexport type BarStoryProps = BakaBarProps & {\n  size?: \"small\" | \"medium\" | \"large\";\n  position?: \"top\" | \"bottom\";\n  elevated?: boolean;\n  items?: number;\n  fab?: boolean;\n};\nexport const defaultProps: BarStoryProps = {\n  position: \"top\",\n  items: 3,\n  fab: true,\n  size: \"medium\",\n  elevated: false,\n};\n\nexport default function BarStory(props: BarStoryProps) {\n  switch (props.position) {\n    case \"bottom\":\n      return (\n        <BakaBar\n          variant={\"bottom\"}\n          style={{ width: 400, display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <div style={{ display: \"flex\", gap: 8 }}>\n            {[\"circle\", \"change_history\", \"rectangle\", \"pentagon\", \"hexagon\"]\n              .slice(0, props.items)\n              .map((shape) => (\n                <BakaButton variant={\"icon\"}>\n                  <BakaIcon>{shape}</BakaIcon>\n                </BakaButton>\n              ))}\n          </div>\n          {props.fab ? (\n            <BakaButton variant={[\"fab\", \"secondary\"]}>\n              <BakaIcon>add</BakaIcon>\n            </BakaButton>\n          ) : null}\n        </BakaBar>\n      );\n    case \"top\":\n    default:\n      switch (props.size) {\n        case \"small\":\n          return (\n            <BakaBar\n              style={{ width: 404 }}\n              variant={\n                [\"top\", \"small\", props.elevated ? \"elevated\" : null].filter(\n                  Boolean\n                ) as BakaBarProps[\"variant\"]\n              }\n            >\n              <BakaButton variant={\"icon\"}>\n                <BakaIcon>menu</BakaIcon>\n              </BakaButton>\n              <BakaText variant=\"title-large\" style={{ flexGrow: 1, textAlign: \"center\" }}>\n                Product\n              </BakaText>\n              <BakaButton variant={\"icon\"}>\n                <BakaIcon variant={\"filled\"}>account_circle</BakaIcon>\n              </BakaButton>\n            </BakaBar>\n          );\n        case \"medium\":\n          return (\n            <BakaBar\n              style={{ width: 404 }}\n              variant={\n                [\"top\", \"medium\", props.elevated ? \"elevated\" : null].filter(\n                  Boolean\n                ) as BakaBarProps[\"variant\"]\n              }\n            >\n              <div style={{ display: \"flex\", flex: 1 }}>\n                <div style={{ flex: 1 }}>\n                  <BakaButton variant={\"icon\"}>\n                    <BakaIcon>arrow_back</BakaIcon>\n                  </BakaButton>\n                </div>\n                <BakaButton variant={\"icon\"}>\n                  <BakaIcon>attach_file</BakaIcon>\n                </BakaButton>\n                <BakaButton variant={\"icon\"}>\n                  <BakaIcon>today</BakaIcon>\n                </BakaButton>\n                <BakaButton variant={\"icon\"}>\n                  <BakaIcon>more_vert</BakaIcon>\n                </BakaButton>\n              </div>\n              <div style={{ paddingInline: 16 }}>\n                <BakaText variant=\"title-large\" style={{ flexGrow: 1, textAlign: \"left\" }}>\n                  Title\n                </BakaText>\n              </div>\n            </BakaBar>\n          );\n        case \"large\":\n          return (\n            <BakaBar\n              style={{ width: 404 }}\n              variant={\n                [\"top\", \"large\", props.elevated ? \"elevated\" : null].filter(\n                  Boolean\n                ) as BakaBarProps[\"variant\"]\n              }\n            >\n              <div style={{ display: \"flex\", flex: 1 }}>\n                <div style={{ flex: 1 }}>\n                  <BakaButton variant={\"icon\"}>\n                    <BakaIcon>arrow_back</BakaIcon>\n                  </BakaButton>\n                </div>\n                <BakaButton variant={\"icon\"}>\n                  <BakaIcon>attach_file</BakaIcon>\n                </BakaButton>\n                <BakaButton variant={\"icon\"}>\n                  <BakaIcon>today</BakaIcon>\n                </BakaButton>\n                <BakaButton variant={\"icon\"}>\n                  <BakaIcon>more_vert</BakaIcon>\n                </BakaButton>\n              </div>\n              <div style={{ paddingInline: 16 }}>\n                <BakaText variant=\"title-large\" style={{ flexGrow: 1, textAlign: \"left\" }}>\n                  Title\n                </BakaText>\n              </div>\n            </BakaBar>\n          );\n      }\n  }\n}\n"},{"name":"bar.stories.tsx","code":"import React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport BarStory, { BarStoryProps, defaultProps } from \"./page\";\n\nconst meta: Meta = {\n  title: \"Material You/Bar\",\n  component: (props: BarStoryProps) => <BarStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n  },\n  argTypes: {\n    position: {\n      control: \"radio\",\n      options: [\"top\", \"bottom\"],\n    },\n    elevated: {\n      control: \"boolean\",\n      if: {\n        arg: \"position\",\n        eq: \"top\",\n      },\n    },\n    size: {\n      control: \"radio\",\n      options: [\"small\", \"medium\", \"large\"],\n      if: {\n        arg: \"position\",\n        eq: \"top\",\n      },\n    },\n    items: {\n      control: {\n        type: \"range\",\n        min: 1,\n        max: 5,\n      },\n      if: {\n        arg: \"position\",\n        eq: \"bottom\",\n      },\n    },\n    fab: {\n      control: \"boolean\",\n      if: {\n        arg: \"position\",\n        eq: \"bottom\",\n      },\n    },\n  },\n};\n"}]},{"name":"demos/material-you/bars/top","files":[{"name":"page.tsx","code":"import { BakaBar, BakaButton, BakaIcon, BakaText } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <>\n      <BakaBar style={{ width: 404 }} variant=\"top\">\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon>menu</BakaIcon>\n        </BakaButton>\n        <BakaText variant=\"title-large\" style={{ flexGrow: 1, textAlign: \"center\" }}>\n          Product\n        </BakaText>\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon variant={\"filled\"}>account_circle</BakaIcon>\n        </BakaButton>\n      </BakaBar>\n    </>\n  );\n}\n"}]},{"name":"demos/material-you/button/filled","files":[{"name":"page.tsx","code":"import { BakaButton, BakaIcon } from \"baka-ui\";\n\nexport default function ButtonDemo() {\n  return (\n    <>\n      <div className=\"flex flex-col gap-4\">\n        <div className=\"flex flex-row gap-5\">\n          <BakaButton variant=\"filled\">Button</BakaButton>\n          <BakaButton variant=\"filled\" hovered={true}>\n            Button\n          </BakaButton>\n          <BakaButton variant=\"filled\" focused={true}>\n            Button\n          </BakaButton>\n          <BakaButton variant=\"filled\" activated={true}>\n            Button\n          </BakaButton>\n          <BakaButton variant=\"filled\" disabled={true}>\n            Button\n          </BakaButton>\n        </div>\n        <div className=\"flex flex-row gap-5\">\n          <BakaButton variant=\"filled\">Button</BakaButton>\n          <BakaButton variant=\"filled\" hovered={true}>\n            <BakaIcon>add</BakaIcon>\n            Button\n          </BakaButton>\n          <BakaButton variant=\"filled\" focused={true}>\n            <BakaIcon>add</BakaIcon>\n            Button\n          </BakaButton>\n          <BakaButton variant=\"filled\" activated={true}>\n            <BakaIcon>add</BakaIcon>\n            Button\n          </BakaButton>\n          <BakaButton variant=\"filled\" disabled={true}>\n            <BakaIcon>add</BakaIcon>\n            Button\n          </BakaButton>\n        </div>\n      </div>\n    </>\n  );\n}\n"}]},{"name":"demos/material-you/button/stories","files":[{"name":"page.tsx","code":"import { BakaButton, BakaButtonProps } from \"baka-ui\";\n\nexport type ButtonStoryProps = BakaButtonProps & {\n  children?: React.ReactNode;\n};\nexport const defaultProps: ButtonStoryProps = {\n  hovered: false,\n  focused: false,\n  activated: false,\n  disabled: false,\n  children: \"Label\",\n};\n\nexport default function ButtonStory(props: ButtonStoryProps) {\n  const { children, ...other } = { ...defaultProps, ...props };\n  return <BakaButton {...other}>{children}</BakaButton>;\n}\n"},{"name":"button.stories.tsx","code":"/// <reference types=\"baka-material-you\" />\n\nimport React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport ButtonStory, { ButtonStoryProps, defaultProps } from \"./page\";\nimport { BakaIcon } from \"baka-ui\";\n\nconst variantOptions: BakaDesign[\"ButtonVariant\"][] = [\n  \"filled\",\n  \"outlined\",\n  \"text\",\n  \"elevated\",\n  \"tonal\",\n];\n\nconst meta: Meta = {\n  title: \"Material You/Button\",\n  component: (props: ButtonStoryProps) => <ButtonStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      options: variantOptions,\n    },\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    variant: \"filled\",\n    ...defaultProps,\n  },\n};\n\nexport const IconButton: Story = {\n  args: {\n    toggleable: false,\n    selected: false,\n    variant: \"icon\",\n    ...defaultProps,\n    children: <BakaIcon>settings</BakaIcon>,\n  },\n  render: (props) => {\n    const { toggleable, ...other } = props;\n\n    return (\n      <ButtonStory\n        {...other}\n        variant={\n          [\n            \"icon\",\n            ...(Array.isArray(props.variant) ? props.variant : [props.variant]),\n            toggleable ? \"toggle\" : null,\n          ].filter(Boolean) as BakaDesign[\"ButtonVariant\"][]\n        }\n      />\n    );\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      mapping: {\n        [\"icon\"]: \"icon\",\n        [\"+ filled\"]: [\"icon\", \"filled\"],\n        [\"+ tonal\"]: [\"icon\", \"tonal\"],\n        [\"+ outlined\"]: [\"icon\", \"outlined\"],\n      },\n      options: [\"icon\", \"+ filled\", \"+ tonal\", \"+ outlined\"],\n    },\n    selected: { control: \"boolean\", if: { arg: \"toggleable\" } },\n    toggleable: { control: \"boolean\" },\n  },\n};\n\nexport const TextAndIcon: Story = {\n  render: (props: ButtonStoryProps & { icon?: string }) => {\n    const { icon, children, ...other } = props;\n\n    return (\n      <ButtonStory {...other}>\n        <BakaIcon>{icon}</BakaIcon>\n        {children}\n      </ButtonStory>\n    );\n  },\n  args: {\n    icon: \"add\",\n    variant: \"filled\",\n    ...defaultProps,\n    children: \"Label\",\n  },\n};\n\nexport const FAB: Story = {\n  render: ({ extended, ...props }) => {\n    return (\n      <ButtonStory\n        {...props}\n        variant={[\n          ...(Array.isArray(props.variant) ? props.variant : [props.variant]),\n          ...(Array.isArray(props[\"variant (size)\"])\n            ? props[\"variant (size)\"]\n            : [props[\"variant (size)\"]]),\n          extended ? \"extended\" : null,\n        ]}\n      >\n        {props.children} {extended && \"Label\"}\n      </ButtonStory>\n    );\n  },\n  args: {\n    variant: \"fab\",\n    [\"variant (size)\"]: \"medium\",\n    extended: false,\n    ...defaultProps,\n    children: <BakaIcon>mode_edit</BakaIcon>,\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      mapping: {\n        [\"fab\"]: \"fab\",\n        [\"+ primary\"]: [\"fab\", \"primary\"],\n        [\"+ secondary\"]: [\"fab\", \"secondary\"],\n        [\"+ tertiary\"]: [\"fab\", \"tertiary\"],\n      },\n      options: [\"fab\", \"+ primary\", \"+ secondary\", \"+ tertiary\"],\n    },\n    [\"variant (size)\"]: {\n      control: \"radio\",\n      options: [\"small\", \"medium\", \"large\"],\n    },\n    extended: { control: \"boolean\" },\n  },\n};\n"}]},{"name":"demos/material-you/card/elevated","files":[{"name":"page.tsx","code":"import { BakaCard, BakaAvatar, BakaText, BakaButton, BakaIcon } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <BakaCard variant={\"elevated\"} style={{ width: 360 }}>\n      <div\n        style={{\n          display: \"flex\",\n          padding: \"12px 4px 12px 16px\",\n          alignSelf: \"stretch\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: 16 }}>\n          <BakaAvatar>\n            <span>A</span>\n          </BakaAvatar>\n          <BakaText style={{ display: \"flex\", flexDirection: \"column\", gap: 4 }}>\n            <BakaText variant={\"title-medium\"}>Header</BakaText>\n            <BakaText variant={\"body-medium\"}>Subhead</BakaText>\n          </BakaText>\n        </div>\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon>more_vert</BakaIcon>\n        </BakaButton>\n      </div>\n      <div>\n        <img\n          src=\"/media.png\"\n          alt=\"media\"\n          width={720}\n          height={376}\n          style={{\n            maxWidth: \"100%\",\n            height: \"auto\",\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignSelf: \"stretch\",\n          flexDirection: \"column\",\n          gap: 32,\n          padding: 16,\n        }}\n      >\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <BakaText variant={\"body-large\"}>Title</BakaText>\n          <BakaText variant={\"body-medium\"}>Subhead</BakaText>\n        </div>\n        <BakaText variant={\"body-medium\"}>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n        </BakaText>\n        <div style={{ display: \"flex\", alignSelf: \"stretch\", justifyContent: \"flex-end\", gap: 8 }}>\n          <BakaButton variant={[\"outlined\"]}>Enabled</BakaButton>\n          <BakaButton variant={[\"filled\"]}>Enabled</BakaButton>\n        </div>\n      </div>\n    </BakaCard>\n  );\n}\n"}]},{"name":"demos/material-you/card/filled","files":[{"name":"page.tsx","code":"import { BakaCard, BakaAvatar, BakaText, BakaButton, BakaIcon } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <BakaCard variant={\"filled\"} style={{ width: 360 }}>\n      <div\n        style={{\n          display: \"flex\",\n          padding: \"12px 4px 12px 16px\",\n          alignSelf: \"stretch\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: 16 }}>\n          <BakaAvatar>\n            <span>A</span>\n          </BakaAvatar>\n          <BakaText style={{ display: \"flex\", flexDirection: \"column\", gap: 4 }}>\n            <BakaText variant={\"title-medium\"}>Header</BakaText>\n            <BakaText variant={\"body-medium\"}>Subhead</BakaText>\n          </BakaText>\n        </div>\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon>more_vert</BakaIcon>\n        </BakaButton>\n      </div>\n      <div>\n        <img\n          src=\"/media.png\"\n          alt=\"media\"\n          width={720}\n          height={376}\n          style={{\n            maxWidth: \"100%\",\n            height: \"auto\",\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignSelf: \"stretch\",\n          flexDirection: \"column\",\n          gap: 32,\n          padding: 16,\n        }}\n      >\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <BakaText variant={\"body-large\"}>Title</BakaText>\n          <BakaText variant={\"body-medium\"}>Subhead</BakaText>\n        </div>\n        <BakaText variant={\"body-medium\"}>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n        </BakaText>\n        <div style={{ display: \"flex\", alignSelf: \"stretch\", justifyContent: \"flex-end\", gap: 8 }}>\n          <BakaButton variant={[\"outlined\"]}>Enabled</BakaButton>\n          <BakaButton variant={[\"filled\"]}>Enabled</BakaButton>\n        </div>\n      </div>\n    </BakaCard>\n  );\n}\n"}]},{"name":"demos/material-you/card/horizontal","files":[{"name":"page.tsx","code":"import { BakaCard, BakaAvatar, BakaText } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <BakaCard variant={\"horizontal\"} style={{ width: 360 }}>\n      <div style={{ display: \"flex\", flexGrow: 1, gap: 16, padding: 16, alignItems: \"center\" }}>\n        <BakaAvatar>\n          <span>A</span>\n        </BakaAvatar>\n        <div style={{ display: \"flex\", flexGrow: 1, flexDirection: \"column\", gap: 4 }}>\n          <BakaText variant=\"title-medium\">Header</BakaText>\n          <BakaText variant=\"body-medium\">Subhead</BakaText>\n        </div>\n      </div>\n\n      <img src=\"/media-small.png\" alt=\"media\" width={80} height={80} />\n    </BakaCard>\n  );\n}\n"}]},{"name":"demos/material-you/card/stories","files":[{"name":"page.tsx","code":"import { BakaAvatar, BakaButton, BakaCard, BakaCardProps, BakaIcon, BakaText } from \"baka-ui\";\n\nexport type CardStoryProps = BakaCardProps & {\n  type: \"vertical\" | \"horizontal\";\n};\nexport const defaultProps: CardStoryProps = {\n  type: \"vertical\",\n};\n\nexport default function CardStory(props: CardStoryProps) {\n  const { type, ...other } = { ...defaultProps, ...props };\n\n  switch (type) {\n    case \"horizontal\":\n      return (\n        <BakaCard variant={[\"horizontal\", other.variant]} style={{ width: 360 }}>\n          <div style={{ display: \"flex\", flexGrow: 1, gap: 16, padding: 16, alignItems: \"center\" }}>\n            <BakaAvatar>\n              <span>A</span>\n            </BakaAvatar>\n            <div style={{ display: \"flex\", flexGrow: 1, flexDirection: \"column\", gap: 4 }}>\n              <BakaText variant=\"title-medium\">Header</BakaText>\n              <BakaText variant=\"body-medium\">Subhead</BakaText>\n            </div>\n          </div>\n\n          <img src=\"./media-small.png\" alt=\"media\" width={80} height={80} />\n        </BakaCard>\n      );\n    case \"vertical\":\n    default: {\n      return (\n        <BakaCard {...other} style={{ width: 360 }}>\n          <div\n            style={{\n              display: \"flex\",\n              padding: \"12px 4px 12px 16px\",\n              alignSelf: \"stretch\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <div style={{ display: \"flex\", alignItems: \"center\", gap: 16 }}>\n              <BakaAvatar>\n                <span>A</span>\n              </BakaAvatar>\n              <BakaText style={{ display: \"flex\", flexDirection: \"column\", gap: 4 }}>\n                <BakaText variant={\"title-medium\"}>Header</BakaText>\n                <BakaText variant={\"body-medium\"}>Subhead</BakaText>\n              </BakaText>\n            </div>\n            <BakaButton variant={[\"icon\"]}>\n              <BakaIcon>more_vert</BakaIcon>\n            </BakaButton>\n          </div>\n          <div>\n            <img\n              src=\"./media.png\"\n              alt=\"media\"\n              width={720}\n              height={376}\n              style={{\n                maxWidth: \"100%\",\n                height: \"auto\",\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              alignSelf: \"stretch\",\n              flexDirection: \"column\",\n              gap: 32,\n              padding: 16,\n            }}\n          >\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <BakaText variant={\"body-large\"}>Title</BakaText>\n              <BakaText variant={\"body-medium\"}>Subhead</BakaText>\n            </div>\n            <BakaText variant={\"body-medium\"}>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n            </BakaText>\n            <div\n              style={{ display: \"flex\", alignSelf: \"stretch\", justifyContent: \"flex-end\", gap: 8 }}\n            >\n              <BakaButton variant={[\"outlined\"]}>Enabled</BakaButton>\n              <BakaButton variant={[\"filled\"]}>Enabled</BakaButton>\n            </div>\n          </div>\n        </BakaCard>\n      );\n    }\n  }\n  //   return <BakaCard {...other}></BakaCard>;\n}\n"},{"name":"card.stories.tsx","code":"import React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport CardStory, { CardStoryProps, defaultProps } from \"./page\";\n\nconst variantOptions: BakaDesign[\"CardVariant\"][] = [\"outlined\", \"elevated\", \"filled\"];\n\nconst meta: Meta = {\n  title: \"Material You/Card\",\n  component: (props: CardStoryProps) => <CardStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      options: variantOptions,\n    },\n    type: { table: { disable: true } },\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    variant: \"outlined\",\n    ...defaultProps,\n  },\n};\n\nexport const Horizontal: Story = {\n  args: {\n    variant: \"outlined\",\n    ...defaultProps,\n    type: \"horizontal\",\n  },\n};\n"}]},{"name":"demos/material-you/checkbox/stories","files":[{"name":"page.tsx","code":"import { BakaCheckbox, BakaCheckboxProps } from \"baka-ui\";\n\nexport type CheckboxStoryProps = BakaCheckboxProps & {};\n\nexport const defaultProps: CheckboxStoryProps = {\n  variant: \"primary\",\n  checked: true,\n  indeterminate: false,\n  hovered: false,\n  focused: false,\n  activated: false,\n  disabled: false,\n};\n\nexport default function CheckboxStory(props: CheckboxStoryProps) {\n  return <BakaCheckbox {...props} />;\n}\n"},{"name":"checkbox.stories.tsx","code":"import React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport CheckboxStory, { CheckboxStoryProps, defaultProps } from \"./page\";\n\nconst variantOptions: BakaDesign[\"CheckboxVariant\"][] = [\"primary\", \"error\"];\n\nconst meta: Meta = {\n  title: \"Material You/Checkbox\",\n  component: (props: CheckboxStoryProps) => <CheckboxStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      options: variantOptions,\n    },\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      map: {\n        primary: null,\n        error: \"error\",\n      },\n      options: [\"primary\", \"error\"],\n    },\n    indeterminate: {\n      control: \"boolean\",\n      if: { arg: \"checked\", neq: true },\n    },\n  },\n};\n"}]},{"name":"demos/material-you/chip/elevated","files":[{"name":"page.tsx","code":"import { BakaChip } from \"baka-ui\";\n\nexport default async function Chip() {\n  return <BakaChip variant={\"elevated\"}>Label</BakaChip>;\n}\n"}]},{"name":"demos/material-you/chip/leading-icon","files":[{"name":"page.tsx","code":"import { BakaChip, BakaIcon, BakaText } from \"baka-ui\";\n\nexport default async function Chip() {\n  return (\n    <BakaChip>\n      <BakaIcon variant={\"primary\"}>local_taxi</BakaIcon>\n      <BakaText>Label</BakaText>\n    </BakaChip>\n  );\n}\n"}]},{"name":"demos/material-you/chip/stories","files":[{"name":"page.tsx","code":"import { BakaAvatar, BakaChip, BakaChipProps, BakaIcon } from \"baka-ui\";\n\nexport type ChipStoryProps = BakaChipProps & {\n  variant?: \"elevated\";\n  leadingIcon?: boolean;\n  trailingIcon?: boolean;\n  avatar?: boolean;\n};\n\nexport const defaultProps: ChipStoryProps = {\n  variant: \"normal\" as any,\n  leadingIcon: false,\n  trailingIcon: false,\n  avatar: false,\n  hovered: false,\n  focused: false,\n  activated: false,\n  dragged: false,\n  selected: false,\n};\n\nexport default function ChipStory(props: ChipStoryProps) {\n  const { leadingIcon, trailingIcon, avatar, variant, ...other } = { ...defaultProps, ...props };\n\n  return (\n    <BakaChip {...other} variant={variant}>\n      {leadingIcon && <BakaIcon variant={\"primary\"}>local_taxi</BakaIcon>}\n      {avatar && (\n        <BakaAvatar>\n          {props.selected ? (\n            <BakaIcon variant={[\"filled\"]}>check</BakaIcon>\n          ) : (\n            <img src=\"./avatar-light.svg\" />\n          )}\n        </BakaAvatar>\n      )}\n      {!avatar && props.selected && (\n        <BakaAvatar>\n          <BakaIcon variant={[\"filled\"]}>check</BakaIcon>\n        </BakaAvatar>\n      )}\n      <span>Label</span>\n      {trailingIcon && <BakaIcon>close</BakaIcon>}\n    </BakaChip>\n  );\n}\n"},{"name":"chip.stories.tsx","code":"import React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport ChipStory, { ChipStoryProps, defaultProps } from \"./page\";\n\nconst variantOptions: (BakaDesign[\"ChipVariant\"] | \"normal\")[] = [\"normal\", \"elevated\"];\n\nconst meta: Meta = {\n  title: \"Material You/Chip\",\n  component: (props: ChipStoryProps) => <ChipStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      options: variantOptions,\n    },\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      mapping: {\n        normal: undefined,\n        elevated: \"elevated\",\n      },\n      defaultValue: undefined,\n      options: variantOptions,\n    },\n    avatar: {\n      if: { arg: \"leadingIcon\", eq: false },\n    },\n  },\n};\n"}]},{"name":"demos/material-you/chip/trailing-icon","files":[{"name":"page.tsx","code":"import { BakaChip, BakaIcon, BakaText } from \"baka-ui\";\n\nexport default async function Chip() {\n  return (\n    <BakaChip variant={\"elevated\"}>\n      <BakaText>Label</BakaText>\n      <BakaIcon>close</BakaIcon>\n    </BakaChip>\n  );\n}\n"}]},{"name":"demos/material-you/design/color-system","files":[{"name":"page.tsx","code":"export default async function Page() {\n    return (\n        <div>\n            {['primary', 'secondary', 'tertiary', 'error'].map((color) => (\n                <div key={color} className={`bg-${color} text-on-${color}`}>\n                    {color}\n                </div>\n            ))}\n        </div>\n    )\n}"}]},{"name":"demos/material-you/dialog/full-screen","files":[{"name":"page.tsx","code":"import { BakaButton, BakaDialog, BakaIcon, BakaText } from \"baka-ui\";\n\nexport default function DialogDemo() {\n  return (\n    <BakaDialog style={{ width: 320 }} variant={\"full-screen\"}>\n      <div style={{ display: \"flex\", gap: 16, flexDirection: \"column\" }}>\n        <BakaIcon style={{ justifyContent: \"center\" }}>mobile_friendly</BakaIcon>\n        <BakaText style={{ display: \"flex\", justifyContent: \"center\" }} variant={\"headline-small\"}>\n          Dialog Title\n        </BakaText>\n        <BakaText variant={\"body-medium\"}>\n          A dialog is a type of modal window that appears in front of app content to provide\n          critical information, or prompt for a decision to be made.\n        </BakaText>\n      </div>\n      <div style={{ display: \"flex\", gap: 8, width: \"100%\", justifyContent: \"flex-end\" }}>\n        <BakaButton variant={[\"text\"]}>Action 2</BakaButton>\n        <BakaButton variant={[\"text\"]}>Action 1</BakaButton>\n      </div>\n    </BakaDialog>\n  );\n}\n"}]},{"name":"demos/material-you/dialog/stories","files":[{"name":"page.tsx","code":"import {\n  BakaDialog,\n  BakaIcon,\n  BakaText,\n  BakaListItem,\n  BakaAvatar,\n  BakaCheckbox,\n  BakaButton,\n  BakaDialogProps,\n} from \"baka-ui\";\n\nexport type DialogStoryProps = BakaDialogProps & {\n  icon?: boolean;\n  menu?: boolean;\n  items?: boolean;\n  itemsCount?: number;\n  scrollable?: boolean;\n};\n\nexport const defaultProps: DialogStoryProps = {\n  variant: \"basic\",\n  icon: false,\n  items: true,\n  itemsCount: 3,\n};\n\nexport default function DialogStory(props: DialogStoryProps) {\n  const args = { ...defaultProps, ...props };\n\n  return (\n    <BakaDialog style={{ width: 320 }} variant={args.variant}>\n      <div style={{ display: \"flex\", gap: 16, flexDirection: \"column\" }}>\n        {args.icon && <BakaIcon style={{ justifyContent: \"center\" }}>mobile_friendly</BakaIcon>}\n        <BakaText\n          style={{ display: \"flex\", justifyContent: args.icon ? \"center\" : \"flex-start\" }}\n          variant={\"headline-small\"}\n        >\n          Dialog Title\n        </BakaText>\n        <BakaText variant={\"body-medium\"}>\n          A dialog is a type of modal window that appears in front of app content to provide\n          critical information, or prompt for a decision to be made.\n        </BakaText>\n      </div>\n      {args.items && (\n        <ul\n          style={{\n            background: \"none\",\n            padding: 0,\n            margin: 0,\n            width: \"calc(100% + 48px)\",\n            marginInline: \"-24px\",\n            maxHeight: 200,\n            overflow: \"auto\",\n          }}\n        >\n          {new Array(args.itemsCount ?? 0).fill(null).map((_, index) => (\n            <BakaListItem key={index}>\n              <BakaAvatar>A</BakaAvatar>\n              <BakaText style={{ flexGrow: 1 }} variant={\"body-large\"}>\n                List item\n              </BakaText>\n              <BakaText>100+</BakaText>\n              <BakaCheckbox readOnly={true} />\n            </BakaListItem>\n          ))}\n        </ul>\n      )}\n      <div style={{ display: \"flex\", gap: 8, width: \"100%\", justifyContent: \"flex-end\" }}>\n        <BakaButton variant={[\"text\"]}>Action 2</BakaButton>\n        <BakaButton variant={[\"text\"]}>Action 1</BakaButton>\n      </div>\n    </BakaDialog>\n  );\n}\n"},{"name":"dialog.stories.tsx","code":"import React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport DialogStory, { DialogStoryProps, defaultProps } from \"./page\";\n\nconst variantOptions: BakaDesign[\"DialogVariant\"][] = [\"basic\", \"full-screen\"];\n\nconst meta: Meta = {\n  title: \"Material You/Dialog\",\n  component: (props: DialogStoryProps) => <DialogStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      options: variantOptions,\n    },\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n    itemsCount: 3,\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      defaultValue: undefined,\n      options: variantOptions,\n    },\n    itemsCount: {\n      control: {\n        type: \"range\",\n        min: 3,\n        max: 5,\n      },\n      if: { arg: \"items\", eq: true },\n    },\n  },\n};\n"}]},{"name":"demos/material-you/divider/stories","files":[{"name":"page.tsx","code":"import { BakaDivider, BakaDividerProps } from \"baka-ui\";\n\nexport type DividerStoryProps = BakaDividerProps & {\n  orientation?: \"horizontal\" | \"vertical\";\n};\n\nexport const defaultProps: DividerStoryProps = {\n  orientation: \"horizontal\",\n};\n\nexport default function DividerStoryDemo(props: DividerStoryProps) {\n  const args = { ...defaultProps, ...props };\n\n  return args.orientation === \"horizontal\" ? (\n    <BakaDivider style={{ width: 300 }} />\n  ) : (\n    <BakaDivider style={{ width: 1, height: 300 }} />\n  );\n}\n"},{"name":"divider.stories.tsx","code":"import React from \"react\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport DividerStory, { DividerStoryProps, defaultProps } from \"./page\";\n\nconst meta: Meta = {\n  title: \"Material You/Divider\",\n  component: (props: DividerStoryProps) => <DividerStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n  },\n  argTypes: {\n    orientation: {\n      control: \"radio\",\n      options: [\"horizontal\", \"vertical\"],\n    },\n  },\n};\n"}]},{"name":"demos/material-you/divider/vertical","files":[{"name":"page.tsx","code":"import { BakaDivider } from \"baka-ui\";\n\nexport default function DividerDemo() {\n  return <BakaDivider style={{ width: 1, height: 300 }} />;\n}\n"}]},{"name":"demos/material-you/icon/stories","files":[{"name":"page.tsx","code":"import { BakaIcon, BakaIconProps } from \"baka-ui\";\nimport icons from \"./icons.json\";\n\nexport type IconStoryProps = {\n  icon: (typeof icons)[number];\n  filled: boolean;\n  variant: \"primary\" | \"error\";\n  size: \"small\" | \"medium\" | \"large\";\n};\n\nexport const defaultProps = {\n  icon: \"person\",\n  filled: false,\n  variant: null,\n  size: \"medium\",\n};\n\nexport default function IconStory(props: IconStoryProps) {\n  const args = { ...defaultProps, ...props };\n\n  return (\n    <BakaIcon\n      variant={[args.variant, args.size, args.filled ? \"filled\" : null].filter(Boolean) as BakaIconProps[\"variant\"]}\n    >\n      {args.icon}\n    </BakaIcon>\n  );\n}\n"},{"name":"icon.stories.tsx","code":"/// <reference types=\"baka-material-you\" />\n\nimport React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport IconStory, { IconStoryProps, defaultProps } from \"./page\";\nimport icons from \"./icons.json\";\n\nconst variantOptions: BakaDesign[\"IconVariant\"][] = [\"primary\", \"error\"];\n\nconst meta: Meta = {\n  title: \"Material You/Icon\",\n  component: (props: IconStoryProps) => <IconStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    icon: {\n      control: {\n        type: \"select\",\n      },\n      options: icons,\n    },\n    \n    variant: {\n      control: \"radio\",\n      map: {\n        none: null,\n        primary: \"primary\",\n        error: \"error\",\n      },\n      options: [\"none\", ...variantOptions],\n    },\n    size: {\n      control: \"radio\",\n      options: [\"small\", \"medium\", \"large\"],\n    },\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n  },\n};\n"}]},{"name":"demos/material-you/layout/stories","files":[{"name":"page.tsx","code":"import { BakaContainer, BakaRow, BakaColumn } from \"baka-ui\";\n\nexport type LayoutStoryProps = {\n  columns?: number;\n  size?: number;\n  autosize?: boolean;\n};\n\nexport const defaultProps = {\n  columns: 12,\n  autosize: false,\n  size: 2,\n  region: true,\n};\n\nexport default function LayoutDemo(props: LayoutStoryProps) {\n  const args = { ...defaultProps, ...props };\n\n  return (\n    <div style={{ width: \"calc(100vw - 128px)\", height: \"calc(100vh - 64px)\", display: \"flex\" }}>\n      {args.region ? (\n        <BakaColumn variant={\"region-left\"} style={{ background: \"#FDE0F1\" }}>\n          <div style={{ height: \"calc(100vh - 64px\" }} />\n        </BakaColumn>\n      ) : null}\n      <BakaContainer>\n        <BakaRow style={{ height: \"100%\" }}>\n          {Array.from({ length: args.columns }).map((_, index) => (\n            <BakaColumn key={index} size={args.autosize ? undefined : args.size}>\n              <div style={{ height: \"100%\", width: \"100%\", background: \"#E0F0F0\" }} />\n            </BakaColumn>\n          ))}\n        </BakaRow>\n      </BakaContainer>\n    </div>\n  );\n}\n"},{"name":"layout.stories.tsx","code":"import React from \"react\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport LayoutStory, { LayoutStoryProps, defaultProps } from \"./page\";\n\nconst meta: Meta = {\n  title: \"Material You/Layout\",\n  component: (props: LayoutStoryProps) => <LayoutStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n  },\n  argTypes: {\n    region: {\n      control: 'boolean'\n    },\n    columns: {\n      control: {\n        type: \"range\",\n        min: 1,\n        max: 12,\n      },\n    },\n    size: {\n      control: {\n        type: \"range\",\n        min: 1,\n        max: 12,\n      },\n      if: {\n        arg: \"autosize\",\n        eq: false,\n      },\n    },\n  },\n};\n"}]},{"name":"demos/material-you/list/list-item","files":[{"name":"page.tsx","code":"import {\n  BakaAvatar,\n  BakaCheckbox,\n  BakaIcon,\n  BakaList,\n  BakaListItem,\n  BakaRadio,\n  BakaSwitch,\n  BakaText,\n} from \"baka-ui\";\nimport Image from \"next/image\";\nimport ListItemBasicDemo from \"./basic/page\";\nimport ListItemWithAvatarDemo from \"./with-avatar/page\";\nimport ListItemWithIconDemo from \"./with-icon/page\";\nimport ListItemWithMediaDemo from \"./with-media/page\";\nimport ListItemWithVideoDemo from \"./with-video/page\";\nimport ListItemWithRadioDemo from \"./with-radio/page\";\nimport ListItemWithCheckboxDemo from \"./with-checkbox/page\";\nimport ListItemWithSwitchDemo from \"./with-switch/page\";\n\n// ListItemVariant: \"multi-line\" | \"video\";\nexport default function ListItemDemo() {\n  return (\n    <>\n      <ListItemBasicDemo />\n      <br />\n      <br />\n      <ListItemWithAvatarDemo />\n      <br />\n      <br />\n      <ListItemWithIconDemo />\n      <br />\n      <br />\n      <ListItemWithMediaDemo />\n      <br />\n      <br />\n      <ListItemWithVideoDemo />\n      <br />\n      <br />\n      <ListItemWithCheckboxDemo />\n      <br />\n      <br />\n      <ListItemWithRadioDemo />\n      <br />\n      <br />\n      <ListItemWithSwitchDemo />\n    </>\n  );\n}\n"}]},{"name":"demos/material-you/list/stories","files":[{"name":"page.tsx","code":"import { BakaAvatar, BakaCheckbox, BakaList, BakaListItem, BakaListProps, BakaText } from \"baka-ui\";\n\nexport type ListStoryProps = BakaListProps & {\n  scrollable?: boolean;\n  items?: number;\n};\n\nexport const defaultProps = {\n  scrollable: true,\n  items: 7,\n};\n\nexport default function ListStory(props: ListStoryProps) {\n  const args = { ...defaultProps, ...props };\n\n  return (\n    <div className=\"container-low\">\n      <BakaList {...args} style={{ width: 360, ...(args.scrollable ? { maxHeight: 300 } : {}) }}>\n        {Array.from({ length: args.items }, (_, i) => (\n          <BakaListItem key={i}>\n            <BakaAvatar>A</BakaAvatar>\n            <BakaText style={{ flexGrow: 1 }} variant={\"body-large\"}>\n              List item\n            </BakaText>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        ))}\n      </BakaList>\n    </div>\n  );\n}\n"},{"name":"list.stories.tsx","code":"/// <reference types=\"baka-material-you\" />\n\nimport React from \"react\";\nimport ListStory, { ListStoryProps, defaultProps } from \"./page\";\nimport { Meta, StoryObj } from \"@storybook/react\";\nimport ListItemStory, {\n  ListItemStoryProps,\n  defaultProps as listItemDefaultProps,\n} from \"../list-item/stories/page\";\n\nconst meta: Meta = {\n  title: \"Material You/List\",\n  component: (props: ListStoryProps) => <ListStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n  },\n  argTypes: {\n    items: {\n      control: {\n        type: \"range\",\n        min: 1,\n        max: 10,\n      },\n    },\n  },\n};\n\nexport const ListItem: Story = {\n  render: (props: ListItemStoryProps) => <ListItemStory {...props} />,\n  args: {\n    ...listItemDefaultProps,\n  },\n  argTypes: {\n    prefix: {\n      mapping: {\n        [\"none\"]: null,\n      },\n      control: {\n        type: \"radio\",\n      },\n      options: [\"none\", \"avatar\", \"icon\", \"media\", \"checkbox\", \"radio\", \"switch\"],\n    },\n    media: {\n      control: {\n        type: \"radio\",\n      },\n      if: { arg: \"prefix\", eq: \"media\" },\n      options: [\"image\", \"video\"],\n    },\n    suffix: {\n      mapping: {\n        [\"none\"]: null,\n      },\n      control: {\n        type: \"radio\",\n      },\n      options: [\"none\", \"checkbox\", \"icon\"],\n    },\n    multiLine: {\n      control: {\n        type: \"boolean\",\n      },\n    },\n  },\n};\n"}]},{"name":"demos/material-you/menu/menu-item","files":[{"name":"page.tsx","code":"import { BakaIcon, BakaMenu, BakaMenuItem, BakaText } from \"baka-ui\";\n\nexport default function MenuItemDemo() {\n  return (\n    <BakaMenu style={{ width: 360 }}>\n      <BakaMenuItem>\n        <BakaIcon>cut</BakaIcon>\n        <BakaText>Menu item</BakaText>\n        <BakaIcon>chevron_right</BakaIcon>\n      </BakaMenuItem>\n    </BakaMenu>\n  );\n}\n"}]},{"name":"demos/material-you/menu/stories","files":[{"name":"page.tsx","code":"import { BakaMenu, BakaMenuItem, BakaText } from \"baka-ui\";\n\nexport type MenuStoryProps = {\n  items: number;\n  scrollable: boolean;\n};\n\nexport const defaultProps = {\n  scrollable: true,\n  items: 5,\n};\n\nexport default function MenuStory(props: MenuStoryProps) {\n  const args = { ...defaultProps, ...props };\n\n  return (\n    <BakaMenu {...args} style={{ width: 360, ...(args.scrollable ? { maxHeight: 300 } : {}) }}>\n      {Array.from({ length: args.items }, (_, i) => (\n        <BakaMenuItem key={i}>\n          <BakaText>Menu item</BakaText>\n        </BakaMenuItem>\n      ))}\n    </BakaMenu>\n  );\n}\n"},{"name":"menu.stories.tsx","code":"/// <reference types=\"baka-material-you\" />\n\nimport React from \"react\";\nimport MenuStory, { MenuStoryProps, defaultProps } from \"./page\";\nimport { Meta, StoryObj } from \"@storybook/react\";\nimport MenuItemStory, {\n  MenuItemStoryProps,\n  defaultProps as menuItemDefaultProps,\n} from \"../menu-item/stories/page\";\n\nconst meta: Meta = {\n  title: \"Material You/Menu\",\n  component: (props: MenuStoryProps) => <MenuStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\n\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n  },\n  argTypes: {\n    items: {\n      control: {\n        type: \"range\",\n        min: 1,\n        max: 10,\n      },\n    },\n  },\n};\n\nexport const MenuItem: Story = {\n  render: (props: MenuItemStoryProps) => <MenuItemStory {...props} />,\n  args: {\n    ...menuItemDefaultProps,\n  },\n};\n"}]},{"name":"demos/material-you/navigation/bottom","files":[{"name":"page.tsx","code":"import { BakaBadge, BakaNavigation, BakaNavigationItem, BakaIcon, BakaText } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <BakaNavigation style={{ width: 409 }} variant=\"bottom\">\n      <BakaNavigationItem selected={true}>\n        <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n      </BakaNavigationItem>\n      <BakaNavigationItem>\n        <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n      </BakaNavigationItem>\n\n      <BakaNavigationItem>\n        <BakaIcon variant={\"filled\"}>\n          fiber_manual_record\n          <BakaBadge variant={\"small\"} style={{ position: \"absolute\", right: 16, top: 2 }} />\n        </BakaIcon>\n      </BakaNavigationItem>\n    </BakaNavigation>\n  );\n}\n"}]},{"name":"demos/material-you/navigation/rail","files":[{"name":"page.tsx","code":"import { BakaNavigation, BakaButton, BakaIcon, BakaNavigationItem, BakaText } from \"baka-ui\";\n\nexport default function Navigation() {\n  return (\n    <BakaNavigation style={{ height: \"calc(100vh - 100px)\" }} variant={\"rail\"}>\n      <div\n        style={{\n          display: \"flex\",\n          gap: 4,\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"stretch\",\n        }}\n      >\n        <BakaButton variant=\"icon\">\n          <BakaIcon>menu</BakaIcon>\n        </BakaButton>\n        {\n          <BakaButton variant={[\"fab\", \"tertiary\"]}>\n            <BakaIcon>mode_edit</BakaIcon>\n          </BakaButton>\n        }\n      </div>\n      <div>\n        <BakaNavigationItem selected={true}>\n          <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n          <BakaText>Label</BakaText>\n        </BakaNavigationItem>\n        <BakaNavigationItem>\n          <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n        </BakaNavigationItem>\n        <BakaNavigationItem>\n          <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n        </BakaNavigationItem>\n        <BakaNavigationItem>\n          <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n        </BakaNavigationItem>\n      </div>\n    </BakaNavigation>\n  );\n}\n"}]},{"name":"demos/material-you/navigation/side","files":[{"name":"page.tsx","code":"import {\n  BakaNavigation,\n  BakaNavigationItem,\n  BakaIcon,\n  BakaText,\n  BakaDivider,\n} from \"baka-ui\";\n\nexport default async function () {\n  return (\n    <BakaNavigation style={{ width: 328 }} variant={\"side\"}>\n      <div style={{ padding: \"18px 16px\" }}>\n        <BakaText variant={\"title-small\"}>Title</BakaText>\n      </div>\n      <div style={{ padding: \"18px 16px\" }}>\n        <BakaText variant={\"title-small\"}>Section header</BakaText>\n      </div>\n      <BakaNavigationItem selected={true}>\n        <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaText>100+</BakaText>\n      </BakaNavigationItem>\n      <BakaNavigationItem>\n        <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaText>100+</BakaText>\n      </BakaNavigationItem>\n      <BakaNavigationItem>\n        <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaText>100+</BakaText>\n      </BakaNavigationItem>\n      <BakaDivider />\n      <div style={{ padding: \"18px 16px\" }}>\n        <BakaText variant={\"title-small\"}>Section header</BakaText>\n      </div>\n      <BakaNavigationItem>\n        <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n        <BakaText>Label</BakaText>\n      </BakaNavigationItem>\n      <BakaNavigationItem>\n        <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n        <BakaText>Label</BakaText>\n      </BakaNavigationItem>\n      <BakaNavigationItem>\n        <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n        <BakaText>Label</BakaText>\n      </BakaNavigationItem>\n    </BakaNavigation>\n  );\n}\n"}]},{"name":"demos/material-you/navigation/stories","files":[{"name":"page.tsx","code":"import {\n  BakaBadge,\n  BakaButton,\n  BakaDivider,\n  BakaIcon,\n  BakaNavigation,\n  BakaNavigationItem,\n  BakaNavigationProps,\n  BakaText,\n} from \"baka-ui\";\n\nexport type NavigationStoryProps = BakaNavigationProps & {\n  type: \"side\" | \"bottom\" | \"rail\";\n  labels: boolean;\n  items: number;\n  icons: boolean;\n  align: \"top\" | \"center\" | \"bottom\";\n};\nexport const defaultProps: NavigationStoryProps = {\n  type: \"bottom\",\n  labels: true,\n  icons: true,\n  items: 3,\n  align: \"top\",\n};\nexport default function NavigationStory(props: NavigationStoryProps) {\n  const { type, labels, items, icons, align, ...other } = props;\n\n  switch (type) {\n    case \"side\":\n      return (\n        <BakaNavigation variant={\"side\"} style={{ width: 300 }}>\n          <div style={{ padding: \"18px 16px\" }}>\n            <BakaText variant={\"title-small\"}>Title</BakaText>\n          </div>\n          <div style={{ padding: \"18px 16px\" }}>\n            <BakaText variant={\"title-small\"}>Section header</BakaText>\n          </div>\n          <BakaNavigationItem selected={true}>\n            {icons ? <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon> : null}\n            <BakaText variant={\"label-medium\"}>Label</BakaText>\n            <BakaText variant={\"label-medium\"}>100+</BakaText>\n          </BakaNavigationItem>\n          <BakaNavigationItem>\n            {icons ? <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon> : null}\n            <BakaText variant={\"label-medium\"}>Label</BakaText>\n            <BakaText variant={\"label-medium\"}>100+</BakaText>\n          </BakaNavigationItem>\n          <BakaNavigationItem>\n            {icons ? <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon> : null}\n            <BakaText variant={\"label-medium\"}>Label</BakaText>\n            <BakaText variant={\"label-medium\"}>100+</BakaText>\n          </BakaNavigationItem>\n          <BakaDivider />\n          <div style={{ padding: \"18px 16px\" }}>\n            <BakaText variant={\"title-small\"}>Section header</BakaText>\n          </div>\n          <BakaNavigationItem>\n            {icons ? <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon> : null}\n            <BakaText variant={\"label-medium\"}>Label</BakaText>\n          </BakaNavigationItem>\n          <BakaNavigationItem>\n            {icons ? <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon> : null}\n            <BakaText variant={\"label-medium\"}>Label</BakaText>\n          </BakaNavigationItem>\n          <BakaNavigationItem>\n            {icons ? <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon> : null}\n            <BakaText variant={\"label-medium\"}>Label</BakaText>\n          </BakaNavigationItem>\n        </BakaNavigation>\n      );\n    case \"bottom\":\n    default:\n      return (\n        <BakaNavigation variant={\"bottom\"} style={{ width: 400 }}>\n          <BakaNavigationItem selected={true}>\n            <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n            {labels ? <BakaText variant={\"label-medium\"}>Label</BakaText> : null}\n          </BakaNavigationItem>\n          {Array.from({ length: items - 2 }, (_, i) => (\n            <BakaNavigationItem key={i}>\n              <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n              {labels ? <BakaText variant={\"label-medium\"}>Label</BakaText> : null}\n            </BakaNavigationItem>\n          ))}\n          <BakaNavigationItem>\n            <BakaIcon variant={\"filled\"}>\n              fiber_manual_record\n              {labels ? (\n                <BakaBadge\n                  variant={\"single-digit\"}\n                  style={{ position: \"absolute\", right: 16, top: 2 }}\n                >\n                  3\n                </BakaBadge>\n              ) : (\n                <BakaBadge variant={\"small\"} style={{ position: \"absolute\", right: 16, top: 2 }} />\n              )}\n            </BakaIcon>\n            {labels ? <BakaText variant={\"label-medium\"}>Label</BakaText> : null}\n          </BakaNavigationItem>\n        </BakaNavigation>\n      );\n    case \"rail\":\n      return (\n        <BakaNavigation variant={\"rail\"} style={{ height: \"calc(100vh - 100px)\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              gap: 4,\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              justifyContent: \"stretch\",\n            }}\n          >\n            <BakaButton variant=\"icon\">\n              <BakaIcon>menu</BakaIcon>\n            </BakaButton>\n            {\n              <BakaButton variant={[\"fab\", \"tertiary\"]}>\n                <BakaIcon>mode_edit</BakaIcon>\n              </BakaButton>\n            }\n          </div>\n          <div\n            style={\n              align === \"center\"\n                ? { margin: \"auto\" }\n                : align === \"bottom\"\n                ? { marginTop: \"auto\" }\n                : {}\n            }\n          >\n            <BakaNavigationItem selected={true}>\n              <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n              {labels ? <BakaText>BakaText</BakaText> : null}\n            </BakaNavigationItem>\n            <BakaNavigationItem>\n              <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n            </BakaNavigationItem>\n            <BakaNavigationItem>\n              <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n            </BakaNavigationItem>\n            <BakaNavigationItem>\n              <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n            </BakaNavigationItem>\n          </div>\n        </BakaNavigation>\n      );\n  }\n}\n"},{"name":"navigation.stories.tsx","code":"import React from \"react\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport NavigationStory, { NavigationStoryProps, defaultProps } from \"./page\";\n\nconst meta: Meta = {\n  title: \"Material You/Navigation\",\n  component: (props: NavigationStoryProps) => <NavigationStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    type: { table: { disable: true } },\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Bottom: Story = {\n  args: {\n    labels: true,\n    items: 3,\n    type: \"bottom\",\n  },\n  argTypes: {\n    items: {\n      control: {\n        type: \"range\",\n        min: 3,\n        max: 5,\n      },\n      if: { arg: \"type\", eq: \"bottom\" },\n    },\n    labels: {\n      control: \"boolean\",\n      if: { arg: \"type\", eq: \"bottom\" },\n    },\n  },\n};\n\nexport const Side: Story = {\n  args: {\n    type: \"side\",\n    icons: true,\n  },\n  argTypes: {\n    icons: {\n      control: \"boolean\",\n    },\n  },\n};\n\nexport const Rail: Story = {\n  args: {\n    type: \"rail\",\n    labels: true,\n    align: \"top\",\n  },\n  argTypes: {\n    labels: {\n      control: \"boolean\",\n    },\n    align: {\n      control: \"radio\",\n      options: [\"top\", \"center\", \"bottom\"],\n      if: { arg: \"type\", eq: \"rail\" },\n    },\n  },\n};\n"}]},{"name":"demos/material-you/radio/labels","files":[{"name":"page.tsx","code":"import { BakaRadio, BakaText } from \"baka-ui\";\n\nexport default function RadioWithLabels() {\n  return (\n    <div style={{ display: \"flex\", gap: 16, flexDirection: \"column\" }}>\n      <div style={{ display: \"flex\", gap: 16, alignItems: \"center\" }}>\n        <BakaRadio id=\"apple\" name=\"fruit\" value=\"apple\" />\n        <BakaText as=\"label\" htmlFor=\"apple\">\n          Apple\n        </BakaText>\n      </div>\n      <div style={{ display: \"flex\", gap: 16, alignItems: \"center\" }}>\n        <BakaRadio id=\"banana\" name=\"fruit\" value=\"banana\" />\n        <BakaText as=\"label\" htmlFor=\"banana\">\n          Banana\n        </BakaText>\n      </div>\n      <div style={{ display: \"flex\", gap: 16, alignItems: \"center\" }}>\n        <BakaRadio id=\"cherry\" name=\"fruit\" value=\"cherry\" />\n        <BakaText as=\"label\" htmlFor=\"cherry\">\n          Cherry\n        </BakaText>\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/radio/stories","files":[{"name":"page.tsx","code":"import { BakaRadio, BakaRadioProps, BakaText } from \"baka-ui\";\n\nexport type RadioStoryProps = BakaRadioProps & {\n  label?: boolean;\n};\n\nexport const defaultProps: RadioStoryProps = {\n  label: true,\n  checked: false,\n  hovered: false,\n  focused: false,\n  activated: false,\n  disabled: false,\n};\n\nexport default function RadioStory(props: RadioStoryProps) {\n  const { label, ...other } = { ...defaultProps, ...props };\n\n  return label ? (\n    <BakaText\n      as=\"label\"\n      variant=\"label-large\"\n      style={{ display: \"flex\", gap: 16, alignItems: \"center\" }}\n    >\n      <BakaRadio {...other} />\n      Label\n    </BakaText>\n  ) : (\n    <BakaRadio {...other} />\n  );\n}\n"},{"name":"radio.stories.tsx","code":"import React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport RadioStory, { RadioStoryProps, defaultProps } from \"./page\";\n\nconst variantOptions: BakaDesign[\"RadioVariant\"][] = [];\n\nconst meta: Meta = {\n  title: \"Material You/Radio\",\n  component: (props: RadioStoryProps) => <RadioStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n  },\n  argTypes: {},\n};\n"}]},{"name":"demos/material-you/switch/icon","files":[{"name":"page.tsx","code":"import { BakaSwitch } from \"baka-ui\";\n\nexport default function SwitchDemo() {\n  return (\n    <div style={{ display: \"flex\", gap: 32, flexDirection: \"column\" }}>\n      <BakaSwitch variant=\"icon\" />\n      <BakaSwitch variant=\"icon\" defaultChecked={true} />\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/switch/stories","files":[{"name":"page.tsx","code":"import { BakaSwitch, BakaSwitchProps } from \"baka-ui\";\n\nexport type SwitchStoryProps = BakaSwitchProps & {};\n\nexport const defaultProps: SwitchStoryProps = {\n  variant: undefined,\n  checked: false,\n  hovered: false,\n  focused: false,\n  activated: false,\n  disabled: false,\n};\n\nexport default function SwitchStory(props: SwitchStoryProps) {\n  const { variant, ...other } = { ...defaultProps, ...props };\n\n  return <BakaSwitch {...other} variant={variant} />;\n}\n"},{"name":"switch.stories.tsx","code":"import React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport SwitchStory, { SwitchStoryProps, defaultProps } from \"./page\";\n\nconst variantOptions: BakaDesign[\"SwitchVariant\"][] = [\"icon\"];\n\nconst meta: Meta = {\n  title: \"Material You/Switch\",\n  component: (props: SwitchStoryProps) => <SwitchStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      options: variantOptions,\n    },\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    ...defaultProps,\n    variant: \"\",\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      defaultValue: \"\",\n      options: [\"\", ...variantOptions],\n    },\n  },\n};\n"}]},{"name":"demos/material-you/text-field/filled","files":[{"name":"page.tsx","code":"import { BakaTextField, BakaIcon, BakaText, BakaInput, BakaButton } from \"baka-ui\";\n\nexport default function FilledTextFieldDemo() {\n  return (\n    <div className=\"flex gap-4 flex-col\">\n      <BakaTextField style={{ width: 300 }}>\n        <BakaIcon>search</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaInput defaultValue=\"Placeholder\" />\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon variant={[\"filled\"]}>clear</BakaIcon>\n        </BakaButton>\n      </BakaTextField>\n      <BakaTextField style={{ width: 300 }} hovered={true}>\n        <BakaIcon>search</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaInput defaultValue=\"Placeholder\" />\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon variant={[\"filled\"]}>clear</BakaIcon>\n        </BakaButton>\n      </BakaTextField>\n      <BakaTextField style={{ width: 300 }} focused={true}>\n        <BakaIcon>search</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaInput defaultValue=\"Placeholder\" />\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon variant={[\"filled\"]}>clear</BakaIcon>\n        </BakaButton>\n      </BakaTextField>\n      <BakaTextField style={{ width: 300 }} invalid={true}>\n        <BakaIcon>search</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaInput defaultValue=\"Placeholder\" />\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon variant={[\"filled\"]}>clear</BakaIcon>\n        </BakaButton>\n      </BakaTextField>\n      <BakaTextField style={{ width: 300 }} disabled={true}>\n        <BakaIcon>search</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaInput defaultValue=\"Placeholder\" />\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon variant={[\"filled\"]}>clear</BakaIcon>\n        </BakaButton>\n      </BakaTextField>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/text-field/outlined","files":[{"name":"page.tsx","code":"import { BakaTextField, BakaIcon, BakaText, BakaInput, BakaButton } from \"baka-ui\";\n\nexport default function FilledTextFieldDemo() {\n  return (\n    <div className=\"flex gap-4 flex-col\">\n      <BakaTextField variant={\"outlined\"} style={{ width: 300 }}>\n        <BakaIcon>search</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaInput defaultValue=\"Placeholder\" />\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon variant={[\"filled\"]}>clear</BakaIcon>\n        </BakaButton>\n      </BakaTextField>\n      <BakaTextField variant={\"outlined\"} style={{ width: 300 }} focused={true}>\n        <BakaIcon>search</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaInput defaultValue=\"Placeholder\" />\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon variant={[\"filled\"]}>clear</BakaIcon>\n        </BakaButton>\n      </BakaTextField>\n      <BakaTextField variant={\"outlined\"} style={{ width: 300 }} invalid={true}>\n        <BakaIcon>search</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaInput defaultValue=\"Placeholder\" />\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon variant={[\"filled\"]}>clear</BakaIcon>\n        </BakaButton>\n      </BakaTextField>\n      <BakaTextField variant={\"outlined\"} style={{ width: 300 }} disabled={true}>\n        <BakaIcon>search</BakaIcon>\n        <BakaText>Label</BakaText>\n        <BakaInput defaultValue=\"Placeholder\" />\n        <BakaButton variant={[\"icon\"]}>\n          <BakaIcon variant={[\"filled\"]}>clear</BakaIcon>\n        </BakaButton>\n      </BakaTextField>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/text-field/stories","files":[{"name":"page.tsx","code":"import {\n  BakaButton,\n  BakaIcon,\n  BakaInput,\n  BakaText,\n  BakaTextField,\n  BakaTextFieldProps,\n} from \"baka-ui\";\n\nexport type TextFieldStoryProps = BakaTextFieldProps & {\n  value: string;\n  placeholder: boolean;\n  label: boolean;\n  leadingIcon: boolean;\n  trailingIcon: boolean;\n  state: \"\" | \"hovered\" | \"focused\" | \"invalid\" | \"disabled\";\n};\nexport const defaultProps = {\n  value: \"\",\n  placeholder: true,\n  label: true,\n  leadingIcon: true,\n  trailingIcon: true,\n  state: \"\",\n};\n\nexport default function TextFieldStory(props: TextFieldStoryProps) {\n  const { value, placeholder, label, leadingIcon, trailingIcon, state, ...other } = props;\n\n  return (\n    <BakaTextField {...other} {...(state ? { [state]: true } : {})}>\n      {leadingIcon && <BakaIcon>search</BakaIcon>}\n      {label && <BakaText variant=\"label-medium\">Label</BakaText>}\n      <BakaInput\n        {...(placeholder && { placeholder: \"Placeholder\" })}\n        value={value}\n        empty={!value}\n        readOnly={true}\n      />\n      {trailingIcon &&\n        (state === \"invalid\" ? (\n          <BakaButton variant={[\"icon\"]}>\n            <BakaIcon variant={[\"filled\", \"error\"]}>error</BakaIcon>\n          </BakaButton>\n        ) : (\n          <BakaButton variant={\"icon\"}>\n            <BakaIcon>cancel</BakaIcon>\n          </BakaButton>\n        ))}\n    </BakaTextField>\n  );\n}\n"},{"name":"text-field.stories.tsx","code":"/// <reference types=\"baka-material-you\" />\n\nimport React from \"react\";\nimport type { BakaDesign } from \"baka-core\";\nimport type { Meta, StoryObj } from \"@storybook/react\";\nimport TextFieldStory, { TextFieldStoryProps, defaultProps } from \"./page\";\n\nconst variantOptions: BakaDesign[\"TextFieldVariant\"][] = [\"filled\", \"outlined\"];\n\nconst meta: Meta = {\n  title: \"Material You/TextField\",\n  component: (props: TextFieldStoryProps) => <TextFieldStory {...props} />,\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    variant: {\n      control: \"radio\",\n      options: variantOptions,\n    },\n    children: { table: { disable: true } },\n  },\n};\n\nexport default meta;\n\ntype Story = StoryObj<typeof meta>;\nexport const Basic: Story = {\n  args: {\n    variant: \"filled\",\n    state: \"\",\n    value: defaultProps.value,\n    placeholder: defaultProps.placeholder,\n    label: defaultProps.label,\n    leadingIcon: defaultProps.leadingIcon,\n    trailingIcon: defaultProps.trailingIcon,\n  },\n  argTypes: {\n    value: {\n      control: \"text\",\n    },\n    state: {\n      control: \"radio\",\n      map: {\n        idle: \"\",\n        hovered: \"hovered\",\n        focused: \"focused\",\n        invalid: \"invalid\",\n        disabled: \"disabled\",\n      },\n      options: [\"\", \"hovered\", \"focused\", \"invalid\", \"disabled\"],\n    },\n    variant: {\n      control: \"radio\",\n      options: [\"filled\", \"outlined\"],\n    },\n  },\n};\n"}]},{"name":"demos/material-you/bars/top/elevated","files":[{"name":"page.tsx","code":"import { BakaButton, BakaBar, BakaIcon, BakaText } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <BakaBar style={{ width: 404 }} variant={[\"top\", \"large\", \"elevated\"]}>\n      <div style={{ display: \"flex\", flex: 1 }}>\n        <div style={{ flex: 1 }}>\n          <BakaButton variant={\"icon\"}>\n            <BakaIcon>arrow_back</BakaIcon>\n          </BakaButton>\n        </div>\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon>attach_file</BakaIcon>\n        </BakaButton>\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon>today</BakaIcon>\n        </BakaButton>\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon>more_vert</BakaIcon>\n        </BakaButton>\n      </div>\n      <div style={{ paddingInline: 16 }}>\n        <BakaText variant=\"title-large\" style={{ flexGrow: 1, textAlign: \"left\" }}>\n          Title\n        </BakaText>\n      </div>\n    </BakaBar>\n  );\n}\n"}]},{"name":"demos/material-you/bars/top/large","files":[{"name":"page.tsx","code":"import { BakaButton, BakaBar, BakaIcon, BakaText } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <BakaBar style={{ width: 404 }} variant={[\"top\", \"large\"]}>\n      <div style={{ display: \"flex\", flex: 1 }}>\n        <div style={{ flex: 1 }}>\n          <BakaButton variant={\"icon\"}>\n            <BakaIcon>arrow_back</BakaIcon>\n          </BakaButton>\n        </div>\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon>attach_file</BakaIcon>\n        </BakaButton>\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon>today</BakaIcon>\n        </BakaButton>\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon>more_vert</BakaIcon>\n        </BakaButton>\n      </div>\n      <div style={{ paddingInline: 16 }}>\n        <BakaText variant=\"title-large\" style={{ flexGrow: 1, textAlign: \"left\" }}>\n          Title\n        </BakaText>\n      </div>\n    </BakaBar>\n  );\n}\n"}]},{"name":"demos/material-you/bars/top/medium","files":[{"name":"page.tsx","code":"import { BakaButton, BakaBar, BakaIcon, BakaText } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <BakaBar style={{ width: 404 }} variant={[\"top\", \"medium\"]}>\n      <div style={{ display: \"flex\", flex: 1 }}>\n        <div style={{ flex: 1 }}>\n          <BakaButton variant={\"icon\"}>\n            <BakaIcon>arrow_back</BakaIcon>\n          </BakaButton>\n        </div>\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon>attach_file</BakaIcon>\n        </BakaButton>\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon>today</BakaIcon>\n        </BakaButton>\n        <BakaButton variant={\"icon\"}>\n          <BakaIcon>more_vert</BakaIcon>\n        </BakaButton>\n      </div>\n      <div style={{ paddingInline: 16 }}>\n        <BakaText variant=\"title-large\" style={{ flexGrow: 1, textAlign: \"left\" }}>\n          Title\n        </BakaText>\n      </div>\n    </BakaBar>\n  );\n}\n"}]},{"name":"demos/material-you/list/list-item/basic","files":[{"name":"page.tsx","code":"import { BakaList, BakaListItem, BakaText, BakaCheckbox } from \"baka-ui\";\n\nexport default function ListItemBasicDemo() {\n  return (\n    <div className=\"container-low\">\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(2, 1fr)\",\n          gridTemplateRows: \"repeat(1fr, 1fr)\",\n          gridColumnGap: 20,\n          gridRowGap: 20,\n          maxWidth: 740,\n        }}\n      >\n        {/* Basic */}\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]} style={{ width: \"100%\" }}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{\n                  whiteSpace: \"nowrap\",\n                  textOverflow: \"ellipsis\",\n                  overflow: \"hidden\",\n                  width: \"100%\",\n                }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{ whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0, width: \"100%\" }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/list/list-item/stories","files":[{"name":"page.tsx","code":"import Image from \"next/image\";\nimport {\n  BakaAvatar,\n  BakaCheckbox,\n  BakaIcon,\n  BakaList,\n  BakaListItem,\n  BakaRadio,\n  BakaSwitch,\n  BakaText,\n} from \"baka-ui\";\n\nexport type ListItemStoryProps = {\n  prefix: null | \"avatar\" | \"icon\" | \"media\" | \"checkbox\" | \"radio\" | \"switch\";\n  suffix: null | \"checkbox\" | \"icon\";\n  media?: \"image\" | \"video\";\n  multiLine: boolean;\n};\n\nexport const defaultProps = {\n  multiLine: false,\n  prefix: null,\n  media: \"image\",\n  suffix: null,\n};\n\nexport default function ListItemStory(props: ListItemStoryProps) {\n  const args = { ...defaultProps, ...props };\n\n  return (\n    <div className=\"container-low\" style={{ maxWidth: 360 }}>\n      <BakaList>\n        <BakaListItem\n          variant={\n            [\n              args.multiLine ? \"multi-line\" : false,\n              args.prefix === \"media\" && args.media === \"video\" ? \"video\" : false,\n            ].filter(Boolean) as any[]\n          }\n        >\n          {(() => {\n            switch (args.prefix) {\n              case \"avatar\":\n                return <BakaAvatar>A</BakaAvatar>;\n              case \"icon\":\n                return <BakaIcon>person</BakaIcon>;\n              case \"media\":\n                return args.media === \"video\" ? (\n                  <Image src=\"/media.png\" width={114} height={64} alt=\"media-video\" />\n                ) : (\n                  <Image src=\"/media-small.png\" width={56} height={56} alt=\"media-small\" />\n                );\n              case \"checkbox\":\n                return <BakaCheckbox readOnly={true} checked={true} />;\n              case \"radio\":\n                return <BakaRadio readOnly={true} checked={true} />;\n              case \"switch\":\n                return <BakaSwitch readOnly={true} checked={false} />;\n              default:\n                return null;\n            }\n          })()}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: 0,\n              width: \"100%\",\n              overflow: \"hidden\",\n            }}\n          >\n            <BakaText variant=\"body-large\">List item</BakaText>\n            <BakaText\n              variant={[\"body-medium\", \"variant\"]}\n              style={\n                args.multiLine\n                  ? { width: \"100%\" }\n                  : {\n                      whiteSpace: \"nowrap\",\n                      textOverflow: \"ellipsis\",\n                      overflow: \"hidden\",\n                      width: \"100%\",\n                    }\n              }\n            >\n              Supporting line text lorem ipsum dolor sit amet, consectetur.\n            </BakaText>\n          </div>\n          {(() => {\n            switch (args.suffix) {\n              case \"checkbox\":\n                return <BakaCheckbox readOnly={true} checked={true} />;\n              case \"icon\":\n                return <BakaIcon>arrow_right</BakaIcon>;\n              default:\n                return null;\n            }\n          })()}\n        </BakaListItem>\n      </BakaList>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/list/list-item/with-avatar","files":[{"name":"page.tsx","code":"import { BakaList, BakaListItem, BakaAvatar, BakaText, BakaCheckbox } from \"baka-ui\";\n\nexport default function ListItemWithAvatarDemo() {\n  return (\n    <div className=\"container-low\">\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(2, 1fr)\",\n          gridTemplateRows: \"repeat(1fr, 1fr)\",\n          gridColumnGap: 20,\n          gridRowGap: 20,\n          maxWidth: 740,\n        }}\n      >\n        {/* With Avatar */}\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <BakaAvatar>A</BakaAvatar>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <BakaAvatar>A</BakaAvatar>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]} style={{ width: \"100%\" }}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaAvatar>A</BakaAvatar>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{\n                  whiteSpace: \"nowrap\",\n                  textOverflow: \"ellipsis\",\n                  overflow: \"hidden\",\n                  width: \"100%\",\n                }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaAvatar>A</BakaAvatar>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{ whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaAvatar>A</BakaAvatar>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaAvatar>A</BakaAvatar>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0, width: \"100%\" }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/list/list-item/with-checkbox","files":[{"name":"page.tsx","code":"import { BakaList, BakaListItem, BakaCheckbox, BakaText, BakaIcon } from \"baka-ui\";\n\nexport default function ListItemWithCheckboxDemo() {\n  return (\n    <div className=\"container-low\">\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(2, 1fr)\",\n          gridTemplateRows: \"repeat(1fr, 1fr)\",\n          gridColumnGap: 20,\n          gridRowGap: 20,\n          maxWidth: 740,\n        }}\n      >\n        {/* With Checkbox */}\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <BakaCheckbox readOnly={true} checked={true} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <BakaCheckbox readOnly={true} checked={true} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]} style={{ width: \"100%\" }}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaIcon>arrow_right</BakaIcon>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaCheckbox readOnly={true} checked={true} />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{\n                  whiteSpace: \"nowrap\",\n                  textOverflow: \"ellipsis\",\n                  overflow: \"hidden\",\n                  width: \"100%\",\n                }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaCheckbox readOnly={true} checked={true} />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{ whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaIcon>arrow_right</BakaIcon>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaCheckbox readOnly={true} checked={true} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaCheckbox readOnly={true} checked={true} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0, width: \"100%\" }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n            <BakaIcon>arrow_right</BakaIcon>\n          </BakaListItem>\n        </BakaList>\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/list/list-item/with-icon","files":[{"name":"page.tsx","code":"import { BakaList, BakaListItem, BakaIcon, BakaText, BakaCheckbox } from \"baka-ui\";\n\nexport default function ListItemWithIconDemo() {\n  return (\n    <div className=\"container-low\">\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(2, 1fr)\",\n          gridTemplateRows: \"repeat(1fr, 1fr)\",\n          gridColumnGap: 20,\n          gridRowGap: 20,\n          maxWidth: 740,\n        }}\n      >\n        {/* With Icon */}\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <BakaIcon>person</BakaIcon>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <BakaIcon>person</BakaIcon>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]} style={{ width: \"100%\" }}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaIcon>person</BakaIcon>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{\n                  whiteSpace: \"nowrap\",\n                  textOverflow: \"ellipsis\",\n                  overflow: \"hidden\",\n                  width: \"100%\",\n                }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaIcon>person</BakaIcon>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{ whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaIcon>person</BakaIcon>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaIcon>person</BakaIcon>\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0, width: \"100%\" }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/list/list-item/with-media","files":[{"name":"page.tsx","code":"import Image from \"next/image\";\nimport { BakaList, BakaListItem, BakaText, BakaCheckbox } from \"baka-ui\";\n\nexport default function ListItemWithMediaDemo() {\n  return (\n    <div className=\"container-low\">\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(2, 1fr)\",\n          gridTemplateRows: \"repeat(1fr, 1fr)\",\n          gridColumnGap: 20,\n          gridRowGap: 20,\n          maxWidth: 740,\n        }}\n      >\n        {/* With Media */}\n        <BakaList>\n          <BakaListItem>\n            <Image src=\"/media-small.png\" width={56} height={56} alt=\"media-small\" />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <Image src=\"/media-small.png\" width={56} height={56} alt=\"media-small\" />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]} style={{ width: \"100%\" }}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <Image src=\"/media-small.png\" width={56} height={56} alt=\"media-small\" />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{\n                  whiteSpace: \"nowrap\",\n                  textOverflow: \"ellipsis\",\n                  overflow: \"hidden\",\n                  width: \"100%\",\n                }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <Image src=\"/media-small.png\" width={56} height={56} alt=\"media-small\" />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{ whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <Image src=\"/media-small.png\" width={56} height={56} alt=\"media-small\" />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <Image src=\"/media-small.png\" width={56} height={56} alt=\"media-small\" />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0, width: \"100%\" }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/list/list-item/with-radio","files":[{"name":"page.tsx","code":"import { BakaList, BakaListItem, BakaRadio, BakaText, BakaIcon } from \"baka-ui\";\n\nexport default function ListItemWithRadioDemo() {\n  return (\n    <div className=\"container-low\">\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(2, 1fr)\",\n          gridTemplateRows: \"repeat(1fr, 1fr)\",\n          gridColumnGap: 20,\n          gridRowGap: 20,\n          maxWidth: 740,\n        }}\n      >\n        {/* With Radio */}\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <BakaRadio readOnly={true} checked={true} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <BakaRadio readOnly={true} checked={true} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]} style={{ width: \"100%\" }}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaIcon>arrow_right</BakaIcon>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaRadio readOnly={true} checked={true} />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{\n                  whiteSpace: \"nowrap\",\n                  textOverflow: \"ellipsis\",\n                  overflow: \"hidden\",\n                  width: \"100%\",\n                }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaRadio readOnly={true} checked={true} />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{ whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaIcon>arrow_right</BakaIcon>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaRadio readOnly={true} checked={true} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaRadio readOnly={true} checked={true} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0, width: \"100%\" }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n            <BakaIcon>arrow_right</BakaIcon>\n          </BakaListItem>\n        </BakaList>\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/list/list-item/with-switch","files":[{"name":"page.tsx","code":"import { BakaList, BakaListItem, BakaSwitch, BakaText, BakaIcon } from \"baka-ui\";\n\nexport default function ListItemWithSwitchDemo() {\n  return (\n    <div className=\"container-low\">\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(2, 1fr)\",\n          gridTemplateRows: \"repeat(1fr, 1fr)\",\n          gridColumnGap: 20,\n          gridRowGap: 20,\n          maxWidth: 740,\n        }}\n      >\n        {/* With Switch */}\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <BakaSwitch readOnly={true} checked={false} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={\"multi-line\"}>\n            <BakaSwitch readOnly={true} checked={false} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]} style={{ width: \"100%\" }}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaIcon>arrow_right</BakaIcon>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaSwitch readOnly={true} checked={false} />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{\n                  whiteSpace: \"nowrap\",\n                  textOverflow: \"ellipsis\",\n                  overflow: \"hidden\",\n                  width: \"100%\",\n                }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaSwitch readOnly={true} checked={false} />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{ whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaIcon>arrow_right</BakaIcon>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaSwitch readOnly={true} checked={false} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem>\n            <BakaSwitch readOnly={true} checked={false} />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0, width: \"100%\" }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n            <BakaIcon>arrow_right</BakaIcon>\n          </BakaListItem>\n        </BakaList>\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/list/list-item/with-video","files":[{"name":"page.tsx","code":"import Image from \"next/image\";\nimport { BakaCheckbox, BakaList, BakaListItem, BakaText } from \"baka-ui\";\n\nexport default function ListItemWithVideoDemo() {\n  return (\n    <div className=\"container-low\">\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(2, 1fr)\",\n          gridTemplateRows: \"repeat(1fr, 1fr)\",\n          gridColumnGap: 20,\n          gridRowGap: 20,\n          maxWidth: 740,\n        }}\n      >\n        {/* With Video */}\n        <BakaList>\n          <BakaListItem variant={[\"video\"]}>\n            <Image src=\"/media.png\" width={114} height={64} alt=\"media-video\" />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={[\"multi-line\", \"video\"]}>\n            <Image src=\"/media.png\" width={114} height={64} alt=\"media-video\" />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText variant={[\"body-medium\", \"variant\"]} style={{ width: \"100%\" }}>\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={\"video\"}>\n            <Image src=\"/media.png\" width={114} height={64} alt=\"media-video\" />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{\n                  whiteSpace: \"nowrap\",\n                  textOverflow: \"ellipsis\",\n                  overflow: \"hidden\",\n                  width: \"100%\",\n                }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={\"video\"}>\n            <Image src=\"/media.png\" width={114} height={64} alt=\"media-video\" />\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: 0,\n                width: \"100%\",\n                overflow: \"hidden\",\n              }}\n            >\n              <BakaText variant=\"body-large\">List item</BakaText>\n              <BakaText\n                variant={[\"body-medium\", \"variant\"]}\n                style={{ whiteSpace: \"nowrap\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}\n              >\n                Supporting line text lorem ipsum dolor sit amet, consectetur.\n              </BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={\"video\"}>\n            <Image src=\"/media.png\" width={114} height={64} alt=\"media-video\" />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0 }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n          </BakaListItem>\n        </BakaList>\n        <BakaList>\n          <BakaListItem variant={\"video\"}>\n            <Image src=\"/media.png\" width={114} height={64} alt=\"media\" />\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 0, width: \"100%\" }}>\n              <BakaText variant=\"body-large\">List item</BakaText>\n            </div>\n            <BakaCheckbox readOnly={true} checked={true} />\n          </BakaListItem>\n        </BakaList>\n      </div>\n    </div>\n  );\n}\n"}]},{"name":"demos/material-you/menu/menu-item/stories","files":[{"name":"page.tsx","code":"import { BakaIcon, BakaMenu, BakaMenuItem, BakaText } from \"baka-ui\";\n\nexport type MenuItemStoryProps = {\n  prefix: boolean;\n  suffix: boolean;\n};\n\nexport const defaultProps = {\n  prefix: true,\n  suffix: true,\n};\n\nexport default function MenuItemStory(props: MenuItemStoryProps) {\n  const args = { ...defaultProps, ...props };\n\n  return (\n    <BakaMenu style={{ width: 360 }}>\n      <BakaMenuItem>\n        {args.prefix && <BakaIcon>cut</BakaIcon>}\n        <BakaText>Menu item</BakaText>\n        {args.suffix && <BakaIcon>chevron_right</BakaIcon>}\n      </BakaMenuItem>\n    </BakaMenu>\n  );\n}\n"}]},{"name":"demos/material-you/navigation/bottom/labels","files":[{"name":"page.tsx","code":"import { BakaBadge, BakaNavigation, BakaNavigationItem, BakaIcon, BakaText } from \"baka-ui\";\n\nexport default async function Demo() {\n  return (\n    <BakaNavigation style={{ width: 400 }} variant={\"bottom\"}>\n      <BakaNavigationItem selected={true}>\n        <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n        {true ? <BakaText>BakaText</BakaText> : null}\n      </BakaNavigationItem>\n      <BakaNavigationItem>\n        <BakaIcon variant={\"filled\"}>fiber_manual_record</BakaIcon>\n        {true ? <BakaText>BakaText</BakaText> : null}\n      </BakaNavigationItem>\n\n      <BakaNavigationItem>\n        <BakaIcon variant={\"filled\"}>\n          fiber_manual_record\n          {true ? (\n            <BakaBadge variant={\"single-digit\"} style={{ position: \"absolute\", right: 16, top: 2 }}>\n              3\n            </BakaBadge>\n          ) : (\n            <BakaBadge variant={\"small\"} style={{ position: \"absolute\", right: 16, top: 2 }} />\n          )}\n        </BakaIcon>\n        {true ? <BakaText>BakaText</BakaText> : null}\n      </BakaNavigationItem>\n    </BakaNavigation>\n  );\n}\n"}]}]